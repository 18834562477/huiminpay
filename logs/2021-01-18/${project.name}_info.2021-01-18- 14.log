[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:07,891   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:07,900   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:07,905   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:08,193   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d02f85c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:08,256   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:08,850   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:08,999   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,009   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,012   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@9673124 {name='merchant-application.yaml', properties={sms.url=http://localhost:56085/sailing, swagger.enable=true, server.servlet.context-path=/merchant, sms.effectiveTime=600}}, NacosPropertySource@18538559 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,031   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,689   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,690   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,696   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,697   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,698   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,698   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,698   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,699   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,699   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,700   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,700   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,700   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,700   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,700   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,701   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,701   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,701   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,701   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,701   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,849   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,894   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,895   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,901   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,903   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:09,903   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,013   INFO   [main][GenericScope.java:294]   -   BeanFactory id=e25fa6fb-5e10-3c57-a64b-7038e42619a0
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,168   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$37d6d1c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,184   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,195   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,205   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,209   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,210   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,210   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$aa166e42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,250   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$3cc0769a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,255   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,258   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,263   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$fd05b054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,268   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$f0d0b919] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,279   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$7bc34c48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,286   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,288   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,849   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,853   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,870   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:10,872   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$c9344922] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,418   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,420   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,424   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,428   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,528   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,529   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,543   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,560   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,563   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$15714f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,570   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,580   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$3b2d10f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,586   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$fa90255] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,593   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$c1f5c46e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,598   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$7d0caa5d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,604   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,608   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,615   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$a3d8218b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,628   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,636   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$f1b49fe4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,647   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,651   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,675   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,687   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,693   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$ce494e58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,699   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,701   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,707   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,714   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,715   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,729   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,739   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,743   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,746   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:11,753   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d02f85c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,047   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,058   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,065   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,066   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,071   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,190   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:12,191   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 3152 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,187   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,258   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,267   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,302   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,322   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,327   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,343   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,360   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,361   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,373   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,378   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,378   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,379   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:28)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,383   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,400   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,407   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,407   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,413   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,422   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=44144&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610708560118&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=44144&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610708558475}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,428   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,507   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,532   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,533   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,535   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%2CcreateMerchant%26pid%3D22444%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610950213343&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:13,938   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,098   INFO   [main][PropertySourcedRequestMappingHandlerMapping.java:69]   -   Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,134   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,134   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,138   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,138   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,168   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,169   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,177   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,178   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,178   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,178   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,179   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,179   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,180   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,180   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,180   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,184   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,184   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,184   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,184   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,184   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,262   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,497   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,515   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,884   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,930   INFO   [main][DocumentationPluginsBootstrapper.java:160]   -   Context refreshed
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,935   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:0) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,944   INFO   [main][DocumentationPluginsBootstrapper.java:163]   -   Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:14,982   INFO   [main][ApiListingReferenceScanner.java:41]   -   Scanning for api listing references
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,118   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,137   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path '/merchant'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,155   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,198   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,206   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,216   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,223   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,224   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,224   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,225   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=22444&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610950215155, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,243   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,256   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,264   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,288   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,296   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,315   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,316   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,318   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,320   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,321   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,322   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,323   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,323   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,324   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,325   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,325   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,325   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,326   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,326   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,326   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,328   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,328   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,330   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,331   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,332   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,359   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,360   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,367   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,368   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,368   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,368   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,368   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,369   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,370   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,373   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,374   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,386   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 22444 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,388   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,388   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,697   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:15,698   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,011   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,033   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,033   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,033   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,041   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,043   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,048   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,068   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,069   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=22444&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,069   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@1869ad6" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="false" exported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-application" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,089   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.137.1:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:16,095   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 9.03 seconds (JVM running for 10.21)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:24,954   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:24,961   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:24,965   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,209   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bc286ed3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,271   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,864   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,947   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,954   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,959   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-service.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,961   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@24182895 {name='merchant-service.yaml', properties={spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.username=root, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, mybatis-plus.mapper-locations=classpath:com/huiminpay/merchant/mapper/*.xml, servlet.servlet.context-path=/merchant-service, mybatis-plus.typeAliasesPackage=com.huiminpay.merchant.entity, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.password=16220230}}, NacosPropertySource@23598047 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/huiminpay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.huimin.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@32661611 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=16220230, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=127.0.0.1, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.huimin.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:25,979   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,375   DEBUG   [main][LogFactory.java:105]   -   Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,383   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'appMapper' and 'com.huiminpay.merchant.mapper.AppMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,383   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'merchantMapper' and 'com.huiminpay.merchant.mapper.MerchantMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,383   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'staffMapper' and 'com.huiminpay.merchant.mapper.StaffMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,383   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'storeMapper' and 'com.huiminpay.merchant.mapper.StoreMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,383   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'storeStaffMapper' and 'com.huiminpay.merchant.mapper.StoreStaffMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,384   WARN   [main][Logger.java:44]   -   No MyBatis mapper was found in '[com.huiminpay.merchant.mapper]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,477   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,478   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,500   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,500   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,500   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,501   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,502   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,502   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,503   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,504   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,504   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,504   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,504   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,664   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,715   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,718   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,721   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,725   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,729   INFO   [main][ServiceAnnotationBeanPostProcessor.java:284]   -    [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,729   INFO   [main][ServiceAnnotationBeanPostProcessor.java:161]   -    [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'merchantService': Generic bean: class [com.huiminpay.merchant.service.impl.MerchantService]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]] } were scanned under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,731   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,731   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,842   INFO   [main][GenericScope.java:294]   -   BeanFactory id=87720d46-b377-3f5f-88ee-c00274e345bd
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,872   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:26,971   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a00e6bd6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,039   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,051   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,054   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$23cfbada] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,068   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,083   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,095   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,099   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,100   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,100   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$960f5754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,105   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$28b95fac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,109   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,150   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,155   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$e8fe9966] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,160   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$dcc9a22b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,171   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$67bc355a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,176   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,178   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,724   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,728   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,744   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:27,747   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$b52d3234] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,286   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,289   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,293   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,296   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,353   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,354   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,379   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,393   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,397   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$ed4ffe0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,404   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,409   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$2725fa0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,413   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$fba1eb67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,422   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$adeead80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,427   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$6905936f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,432   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,436   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,442   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$8fd10a9d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,451   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,455   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ddad88f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,466   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,470   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,491   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,507   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,512   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$ba42376a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,519   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,521   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,528   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,534   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,535   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,550   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,557   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,559   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,561   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,569   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$bc286ed3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,854   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57020 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,864   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,871   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,872   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,876   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,991   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:28,991   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 3003 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,358   INFO   [main][DruidDataSourceAutoConfigure.java:56]   -   Init DruidDataSource
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,689   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10001,procId-1} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,694   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10002,procId-2} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,697   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10003,procId-3} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,700   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10004,procId-4} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,703   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005,procId-5} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:29,706   INFO   [main][DruidDataSource.java:1002]   -   {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,356   DEBUG   [main][GlobalConfigUtils.java:106]   -   DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,370   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,371   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,371   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,372   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,373   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,373   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,402   DEBUG   [main][VFS.java:77]   -   Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,404   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.App matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,404   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Merchant matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,405   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Staff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,405   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Store matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,406   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.StoreStaff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,413   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,415   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,494   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,498   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,501   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,518   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,519   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,522   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,524   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,525   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,527   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,528   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,530   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,532   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,535   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,537   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,539   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,541   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,543   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,553   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,555   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,557   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,558   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,560   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,565   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,567   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,568   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,570   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,572   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,574   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,577   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,579   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,582   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,584   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,586   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,588   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,594   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,596   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,598   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,600   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,602   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,605   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,607   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,608   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,612   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,614   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,616   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,618   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,619   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,621   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,623   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,625   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,627   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,633   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,635   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,638   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,640   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,643   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,645   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,647   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,648   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,650   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,653   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,656   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,658   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,660   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,662   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,665   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,666   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,671   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,675   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,677   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,679   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,681   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,683   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,684   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,686   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,687   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,688   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,689   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,690   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,692   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,693   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,694   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,695   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,697   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,698   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,723   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,724   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,726   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,727   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,755   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,756   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,762   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,763   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,764   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,764   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,765   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,765   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,765   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,766   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,766   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,770   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,770   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,770   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,771   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,771   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:30,913   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,218   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,249   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,256   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,267   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,730   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,809   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,869   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,928   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:31,986   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,018   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,024   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,024   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,033   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,038   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,038   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,039   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory.create(DubboGenericServiceFactory.java:80)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.<init>(DubboMetadataServiceInvocationHandler.java:41)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.newProxy(DubboMetadataServiceProxy.java:83)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.lambda$initProxy$0(DubboMetadataServiceProxy.java:52)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.initProxy(DubboMetadataServiceProxy.java:51)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initDubboMetadataServiceProxy(DubboServiceMetadataRepository.java:640)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$null$4(DubboServiceMetadataRepository.java:619)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$initSubscribedDubboMetadataService$5(DubboServiceMetadataRepository.java:615)
	at java.util.Optional.ifPresent(Optional.java:159)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initSubscribedDubboMetadataService(DubboServiceMetadataRepository.java:614)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:286)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:260)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.afterSingletonsInstantiated(DubboServiceMetadataRepository.java:253)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$2e281f21.afterSingletonsInstantiated(<generated>)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:866)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,042   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,056   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,061   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,061   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,066   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,080   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,098   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,100   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,115   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,116   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,118   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,119   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,120   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,120   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,121   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,121   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,122   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,122   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,123   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,123   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,123   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,124   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,124   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,125   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,125   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,127   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,127   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,128   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,152   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,161   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,184   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,185   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,191   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,191   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,191   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,191   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,192   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,192   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,192   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,192   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,193   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,193   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,193   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,193   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,197   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,198   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,219   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 38648 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,222   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,222   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,507   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,508   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,826   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,841   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,842   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,842   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,863   INFO   [main][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20891 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xe15ddb88, L:/192.168.137.1:13048 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,863   INFO   [main][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,879   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,888   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,899   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,912   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=36976&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610708535589&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,913   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,920   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,926   INFO   [main][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=22444&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,929   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=22444&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950215156&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,931   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=38648&qos.enable=false&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D38648%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610950232018%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950232018&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,954   DEBUG   [main][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,955   DEBUG   [main][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,955   DEBUG   [main][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,955   DEBUG   [main][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,964   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,964   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:32,966   DEBUG   [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@709988
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,013   DEBUG   [NettyServerWorker-3-1][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,013   DEBUG   [NettyServerWorker-3-1][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,013   DEBUG   [NettyServerWorker-3-1][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,014   DEBUG   [NettyServerWorker-3-1][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,019   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,020   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,021   DEBUG   [NettyServerWorker-3-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@440b7f
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,055   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,079   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,080   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,080   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,148   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,150   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,157   INFO   [main][ServiceBean.java:112]   -    [DUBBO] The service ready on spring started. service: com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,170   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,192   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to local registry url : injvm://127.0.0.1/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,193   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,193   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,193   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=38648&qos.enable=false&registry=spring-cloud&release=2.7.3&timestamp=1610950233170, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,209   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20892, export /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,215   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,764   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,764   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,766   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,767   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,768   DEBUG   [main][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174] will notify all URLs : []
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,769   DEBUG   [main][RegistryProtocol.java:524]   -    [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,769   DEBUG   [main][RegistryProtocol.java:528]   -    [DUBBO] subscribe url: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,770   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,770   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=38648&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610950233172, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,770   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,774   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,781   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,781   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610950233174, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,785   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,806   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57020 (http) with context path ''
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,822   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,830   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,831   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,831   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,832   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=38648&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610950233823, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,833   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,836   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,841   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,842   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=38648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,842   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@ee1963" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" register="true" deprecated="false" version="1.0.0" dynamic="true" group="merchant-service" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,853   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-service 192.168.137.1:57020 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:33,857   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantBootstrap in 9.692 seconds (JVM running for 11.02)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:34,616   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343, urls: [dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=38648&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610950233174], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:34,640   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20892 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xe14cd0a4, L:/192.168.137.1:13111 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:34,640   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,942   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,949   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,950   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,950   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,950   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,983   WARN   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,987   INFO   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,987   INFO   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,991   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,991   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,991   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,992   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:44,997   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,003   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=38648&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,004   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=38648&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610950233823&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,004   INFO   [com.alibaba.nacos.naming.client.listener][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=22444&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D22444%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610950244984%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950244984&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,027   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,036   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,037   WARN   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,039   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,042   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:10:45,044   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById,createMerchant&pid=22444&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610950213343] will notify all URLs : [dubbo://192.168.137.1:20892?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById,createMerchant&pid=38648&register=true&release=2.7.3&side=provider&timestamp=1610950233174]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:03,154   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:14,952   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:33,159   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:33,769   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe15ddb88, L:/192.168.137.1:13048 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:33,770   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:13048, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:33,770   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,054   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   A cookie header was received [1605750040,1605856357] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,060   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,061   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:524]   -   Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,084   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:546]   -   Completed initialization in 23 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,616   WARN   [http-nio-57010-exec-2][AbstractSerializableParameter.java:421]   -   Illegal DefaultValue  for parameter type integer
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:601)
	at java.lang.Long.valueOf(Long.java:803)
	at io.swagger.models.parameters.AbstractSerializableParameter.getExample(AbstractSerializableParameter.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:688)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(MapSerializer.java:722)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:643)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)
	at springfox.documentation.spring.web.json.JsonSerializer.toJson(JsonSerializer.java:38)
	at springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(Swagger2Controller.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:44,957   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:45,044   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe14cd0a4, L:/192.168.137.1:13111 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:45,045   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:13111, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:45,045   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,297   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,334   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,348   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][BaseJdbcLogger.java:159]   -   ==>  Preparing: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=? 
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,452   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} created. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,473   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][BaseJdbcLogger.java:159]   -   ==> Parameters: 1(Long)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,475   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Parameters : [1]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,476   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Types : [BIGINT]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,523   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} executed. 48.9063 millis. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,527   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} open
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,528   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Header: [ID, MERCHANT_NAME, MERCHANT_NO, MERCHANT_ADDRESS, MERCHANT_TYPE, BUSINESS_LICENSES_IMG, ID_CARD_FRONT_IMG, ID_CARD_AFTER_IMG, USERNAME, MOBILE, CONTACTS_ADDRESS, AUDIT_STATUS, TENANT_ID]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,538   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Result: [1, alibaba, null, null, null, null, null, null, null, null, null, null, null]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,541   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][BaseJdbcLogger.java:159]   -   <==      Total: 1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,541   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} closed
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,542   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} clearParameters. 
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,542   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][PreparedStatementPool.java:129]   -   {conn-10005, pstmt-20000} enter cache
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,543   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:11:59,551   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:03,163   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:14,961   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:33,168   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:33,771   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe15ddb88, L:/192.168.137.1:13048 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:33,771   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:13048, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:33,771   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:44,964   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:59,552   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe14cd0a4, L:/192.168.137.1:13111 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:59,553   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:13111, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:12:59,553   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:03,171   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:14,968   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:33,176   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:33,772   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe15ddb88, L:/192.168.137.1:13048 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:33,772   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:13048, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:33,773   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:44,971   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,536   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,869   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,870   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   ==>  Preparing: INSERT INTO merchant ( ID, MOBILE, AUDIT_STATUS ) VALUES ( ?, ?, ? ) 
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,877   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20001} created. INSERT INTO merchant  ( ID,








MOBILE,

AUDIT_STATUS )  VALUES  ( ?,








?,

? )
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,882   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   ==> Parameters: 1351050146437582849(Long), 10086(String), 0(String)
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,883   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20001} Parameters : [1351050146437582849, 10086, 0]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,883   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20001} Types : [BIGINT, VARCHAR, VARCHAR]
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,888   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20001} executed. 5.4833 millis. INSERT INTO merchant  ( ID,








MOBILE,

AUDIT_STATUS )  VALUES  ( ?,








?,

? )
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,889   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   <==    Updates: 1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,890   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20001} clearParameters. 
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,890   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][PreparedStatementPool.java:129]   -   {conn-10005, pstmt-20001} enter cache
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,890   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:13:50,891   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:14:03,179   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-18 14:14:14,973   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
