[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:34,445   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:34,453   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:34,457   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:34,705   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$736bf51d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:34,766   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,325   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,409   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,415   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@32021540 {name='merchant-application.yaml', properties={}}, NacosPropertySource@24729669 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,432   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,868   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,870   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,878   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,879   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,880   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,880   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,880   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,881   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:35,882   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,008   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,043   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,044   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,047   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,048   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,048   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,144   INFO   [main][GenericScope.java:294]   -   BeanFactory id=c3f1bcf3-2eff-30c1-9c4b-03f742cd8b5d
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,233   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$db134124] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,286   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,297   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,305   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,308   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,309   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,310   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$4d52dd9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,313   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$dffce5f6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,320   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,322   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,326   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$a0421fb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,330   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$940d2875] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,339   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$1effbba4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,347   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,349   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,888   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,891   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,905   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:36,907   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$6c70b87e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,450   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,454   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,458   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,461   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,508   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,508   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,519   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,572   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,576   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$a4938454] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,582   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,587   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$de698054] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,590   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$b2e571b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,595   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$653233ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,600   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$204919b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,604   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,610   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,616   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$471490e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,626   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,629   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$94f10f40] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,636   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,640   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,663   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,669   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,674   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$7185bdb4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,683   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,685   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,694   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,700   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,701   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,711   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,716   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,717   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,719   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,727   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$736bf51d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,987   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:37,998   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:38,009   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:38,010   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:38,015   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:38,115   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:38,115   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 2676 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,010   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,068   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,077   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,116   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,129   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,133   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,151   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,167   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,168   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,177   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,181   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,181   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,182   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,186   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,199   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,204   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,204   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,208   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,210   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,210   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,210   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,223   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,224   WARN   [main][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,234   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610623743557&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=41924&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610623742948}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,235   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,243   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,247   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,249   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,250   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=24684&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%26pid%3D24684%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610625819152&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625819152, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,284   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,284   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,287   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,287   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,318   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,318   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,325   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,325   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,326   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,326   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,327   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,327   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,327   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,327   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,328   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,331   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,331   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,331   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,332   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,332   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,446   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,690   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:39,702   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,014   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,069   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,069   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,118   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,119   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,120   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,120   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,120   DEBUG   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,120   WARN   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,124   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,141   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path ''
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,157   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,190   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,198   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,206   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,213   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,213   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,213   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,214   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=24684&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610625820157, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,226   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,237   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,245   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,266   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,271   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,284   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,284   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,286   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,287   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,287   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,288   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,289   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,289   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,289   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,290   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,290   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,290   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,291   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,291   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,291   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,292   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,292   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,293   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,294   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,294   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,314   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,315   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,320   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,320   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,320   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,321   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,322   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,322   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,324   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,325   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,334   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 24684 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,336   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,336   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,608   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,609   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,929   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,942   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,942   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,942   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,949   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,951   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,954   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,962   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,962   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=24684&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625820158&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,963   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@d3cdbf" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-application" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,979   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.137.1:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:03:40,983   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 7.322 seconds (JVM running for 8.411)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:04:10,123   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:04:40,126   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:10,139   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:40,143   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:53,703   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:53,712   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:53,717   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:53,967   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50e94443] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:54,026   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:54,593   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:54,680   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:54,686   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@11945115 {name='merchant-application.yaml', properties={}}, NacosPropertySource@3479560 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:54,703   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,139   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,140   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,148   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,149   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,149   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,150   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,151   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,151   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,151   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,151   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,151   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,277   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,312   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,313   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,316   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,317   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,317   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,412   INFO   [main][GenericScope.java:294]   -   BeanFactory id=c3f1bcf3-2eff-30c1-9c4b-03f742cd8b5d
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,501   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$b890904a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,557   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,567   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,576   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,581   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,582   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,582   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$2ad02cc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,586   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$bd7a351c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,591   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,593   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,598   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$7dbf6ed6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,602   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$718a779b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,613   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$fc7d0aca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,619   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:55,621   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,158   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,161   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,177   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,179   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$49ee07a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,719   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,721   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,725   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,728   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,776   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,777   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,825   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,839   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,842   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8210d37a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,848   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,852   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$bbe6cf7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,856   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$9062c0d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,861   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$42af82f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,868   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$fdc668df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,872   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,876   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,881   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$2491e00d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,891   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,894   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$726e5e66] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,901   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,905   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,929   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,936   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,940   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$4f030cda] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,951   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,953   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,958   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,963   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,964   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,976   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,981   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,983   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,985   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:56,995   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50e94443] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,253   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,268   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,274   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,275   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,280   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,381   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:57,382   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 2672 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,260   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,314   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,323   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,358   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,372   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,376   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,389   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,405   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,406   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,420   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,425   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,425   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,426   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,430   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,445   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,450   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,450   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,454   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,455   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,456   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,456   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,469   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,469   WARN   [main][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,476   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610623743557&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=41924&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610623742948}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,477   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,485   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,489   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,491   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,493   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=40728&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%26pid%3D40728%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610625958389&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610625958389, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,528   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,528   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,531   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,531   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,559   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,559   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,565   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,566   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,567   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,567   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,568   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,568   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,568   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,568   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,569   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,572   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,572   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,572   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,572   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,573   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,683   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,929   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:58,946   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,246   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,292   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,292   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,341   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,342   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,342   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,343   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,343   DEBUG   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,343   WARN   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,348   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,364   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path ''
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,380   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,415   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,422   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,431   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,437   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,438   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,438   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,438   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=40728&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610625959380, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,450   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,466   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,474   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,491   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,496   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,511   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,511   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,513   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,514   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,514   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,515   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,516   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,516   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,516   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,517   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,517   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,517   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,518   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,518   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,518   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,519   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,519   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,520   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,521   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,522   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,541   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,545   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,551   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,552   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,552   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,552   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,552   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,552   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,553   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,557   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,557   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,566   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 40728 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,568   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,568   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,835   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:05:59,836   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,153   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,166   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,167   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,167   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,173   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,175   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,177   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,185   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,185   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=40728&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625959381&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,185   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@4f4092" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-application" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,201   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.137.1:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:00,205   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 7.302 seconds (JVM running for 8.454)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:29,345   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:06:59,349   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:07:29,353   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:07:59,356   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:08:29,360   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:08:59,363   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:29,367   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:37,849   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:37,884   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$50e94443] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:37,893   INFO   [pool-5-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,451   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,452   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@17815364 {name='merchant-application.yaml', properties={swagger.enable=true, server.servlet.context-path=/merchant}}, NacosPropertySource@3479560 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,469   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,482   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][StartupInfoLogger.java:59]   -   Started application in 1.215 seconds (JVM running for 226.731)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,483   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][AwaitingNonWebApplicationListener.java:155]   -    [Dubbo] Current Spring Boot Application is about to shutdown...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,602   INFO   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][RefreshEventListener.java:51]   -   Refresh keys changed: [swagger.enable, server.servlet.context-path]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:38,602   DEBUG   [com.alibaba.nacos.client.Worker.longPolling.fixed-127.0.0.1_8848-235982fe-96bf-4a68-9885-ad3acd19802b][NacosContextRefresher.java:128]   -   Refresh Nacos config group HUIMINPAY_GROUP,dataIdmerchant-application.yaml
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:52,813   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:52,820   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:52,825   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,072   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5692bca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,129   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,689   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,776   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,781   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,782   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@30467510 {name='merchant-application.yaml', properties={swagger.enable=true, server.servlet.context-path=/merchant}}, NacosPropertySource@15550190 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:53,799   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,258   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,260   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,265   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,265   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,265   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,266   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,267   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,267   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,267   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,268   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,269   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,269   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,269   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,269   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,399   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,435   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,435   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,438   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,439   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,440   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,540   INFO   [main][GenericScope.java:294]   -   BeanFactory id=c3f1bcf3-2eff-30c1-9c4b-03f742cd8b5d
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,630   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$6d1077d1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,686   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,696   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,708   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,711   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,712   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,712   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$df50144b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,716   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$71fa1ca3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,720   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,723   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,727   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$323f565d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,732   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$260a5f22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,746   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$b0fcf251] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,752   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:54,754   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,296   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,299   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,315   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,317   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$fe6def2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,850   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,852   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,856   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,859   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,909   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,910   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,919   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,935   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,938   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$3690bb01] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,945   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,951   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$7066b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,955   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$44e2a85e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,960   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$f72f6a77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,964   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$b2465066] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,968   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,971   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,979   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$d911c794] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,989   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,992   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$26ee45ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:55,999   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,005   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,065   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,072   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,076   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$382f461] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,082   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,084   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,089   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,096   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,097   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,111   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,116   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,118   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,119   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,126   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$5692bca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,387   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,397   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,404   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,404   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,409   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,511   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:56,512   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 2706 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,322   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,434   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,443   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,473   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,486   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,490   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,509   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,525   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,526   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,535   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,540   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,540   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,541   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,545   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,558   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,563   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,564   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,568   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,569   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,569   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,569   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,582   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,582   WARN   [main][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,588   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610623743557&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=41924&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610623742948}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,589   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,597   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,601   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,603   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,609   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%26pid%3D41648%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610626197509&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,638   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,638   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,642   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,642   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,668   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,669   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,674   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,679   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,679   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,680   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,680   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,680   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,681   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,681   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,681   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,685   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,685   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,685   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,685   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,685   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:57,792   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,039   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,051   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,357   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,409   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,409   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,452   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,453   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,454   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,454   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,454   DEBUG   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,454   WARN   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,459   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,482   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path '/merchant'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,498   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,528   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,536   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,544   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,557   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,558   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,558   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,558   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=41648&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610626198499, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,570   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,586   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,596   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,614   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,620   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,639   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,640   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,642   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,643   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,644   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,644   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,645   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,645   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,646   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,647   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,647   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,647   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,647   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,648   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,648   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,649   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,649   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,650   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,650   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,651   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,672   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,672   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,677   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,678   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,678   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,678   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,678   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,678   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,679   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,682   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,682   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,691   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 41648 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,693   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,694   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,960   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:58,960   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,261   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,274   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,274   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,274   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,281   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,282   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,285   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,292   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,292   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=41648&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,293   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@11f60a0" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="false" exported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-application" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,307   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.137.1:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:09:59,315   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 7.294 seconds (JVM running for 8.417)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:23,923   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:23,930   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:23,933   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,160   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6bf4995] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,215   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,785   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,867   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,873   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,877   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-service.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,878   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@26906457 {name='merchant-service.yaml', properties={spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.username=root, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, mybatis-plus.mapper-locations=classpath:com/huiminpay/merchant/mapper/*.xml, servlet.servlet.context-path=/merchant-service, mybatis-plus.typeAliasesPackage=com.huiminpay.merchant.entity, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.password=16220230}}, NacosPropertySource@25565737 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/huiminpay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.huimin.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@16926244 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=16220230, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=127.0.0.1, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.huimin.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:24,897   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,261   DEBUG   [main][LogFactory.java:105]   -   Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,355   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,356   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,374   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,375   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,376   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,376   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,376   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,377   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,378   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,378   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,378   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,378   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,378   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,521   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,567   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,567   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,570   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,572   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,577   INFO   [main][ServiceAnnotationBeanPostProcessor.java:284]   -    [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,577   INFO   [main][ServiceAnnotationBeanPostProcessor.java:161]   -    [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'merchantService': Generic bean: class [com.huiminpay.merchant.service.impl.MerchantService]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]] } were scanned under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,578   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,578   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,701   INFO   [main][GenericScope.java:294]   -   BeanFactory id=87720d46-b377-3f5f-88ee-c00274e345bd
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,729   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,825   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$daa54698] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,929   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,939   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,943   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$5e66959c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,960   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,979   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,991   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,995   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,997   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:25,997   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$d0a63216] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,002   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$63503a6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,008   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,013   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,019   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$23957428] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,024   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$17607ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,036   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$a253101c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,042   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,043   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,586   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,590   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,602   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:26,605   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$efc40cf6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,140   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,143   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,149   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,152   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,204   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,205   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,225   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,241   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,245   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$27e6d8cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,251   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,256   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$61bcd4cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,261   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$3638c629] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,266   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$e8858842] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,271   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$a39c6e31] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,279   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,282   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,289   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$ca67e55f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,298   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,302   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$184463b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,310   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,316   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,338   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,352   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,357   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$f4d9122c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,363   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,365   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,370   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,376   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,377   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,391   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,397   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,399   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,401   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,408   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6bf4995] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,681   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57020 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,692   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,699   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,699   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,704   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,813   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:27,813   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 2907 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,217   INFO   [main][DruidDataSourceAutoConfigure.java:56]   -   Init DruidDataSource
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,412   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10001,procId-333} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,417   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10002,procId-334} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,420   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10003,procId-335} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,423   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10004,procId-336} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,426   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005,procId-337} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,430   INFO   [main][DruidDataSource.java:1002]   -   {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:28,457   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,047   DEBUG   [main][GlobalConfigUtils.java:106]   -   DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,053   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,054   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,055   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,055   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,056   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,057   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,086   DEBUG   [main][VFS.java:77]   -   Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,087   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.App matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,088   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Merchant matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,088   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Staff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,089   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Store matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,089   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.StoreStaff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,096   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,098   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,148   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,151   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,154   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,173   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,174   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,177   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,179   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,180   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,181   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,183   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,185   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,187   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,189   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,190   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,193   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,194   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,197   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,202   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,205   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,206   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,207   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,212   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,215   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,216   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,217   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,218   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,219   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,221   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,223   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,225   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,227   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,229   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,231   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,232   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,236   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,238   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,239   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,240   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,241   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,243   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,244   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,245   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,246   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,247   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,249   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,254   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,256   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,258   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,259   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,261   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,263   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,267   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,269   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,270   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,272   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,273   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,275   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,277   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,278   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,279   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,280   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,282   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,284   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,285   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,287   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,289   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,291   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,292   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,298   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,300   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,302   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,304   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,305   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,307   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,308   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,309   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,310   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,312   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,314   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,315   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,317   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,318   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,320   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,321   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,322   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,352   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,353   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,356   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,356   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,384   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,384   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,391   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,392   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,392   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,392   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,393   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,393   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,394   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,394   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,394   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,398   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,398   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,398   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,398   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,398   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,525   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,797   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,822   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,833   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:29,844   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,288   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,360   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,415   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,472   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,521   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,551   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,556   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,556   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,565   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,570   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,570   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,571   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory.create(DubboGenericServiceFactory.java:80)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.<init>(DubboMetadataServiceInvocationHandler.java:41)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.newProxy(DubboMetadataServiceProxy.java:83)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.lambda$initProxy$0(DubboMetadataServiceProxy.java:52)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.initProxy(DubboMetadataServiceProxy.java:51)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initDubboMetadataServiceProxy(DubboServiceMetadataRepository.java:640)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$null$4(DubboServiceMetadataRepository.java:619)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$initSubscribedDubboMetadataService$5(DubboServiceMetadataRepository.java:615)
	at java.util.Optional.ifPresent(Optional.java:159)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initSubscribedDubboMetadataService(DubboServiceMetadataRepository.java:614)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:286)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:260)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.afterSingletonsInstantiated(DubboServiceMetadataRepository.java:253)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$c2374607.afterSingletonsInstantiated(<generated>)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:866)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,574   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,586   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,591   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,591   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,595   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,609   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,623   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,626   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,641   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,641   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,643   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,644   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,644   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,645   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,645   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,646   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,646   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,647   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,647   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,647   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,647   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,647   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,648   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,648   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,649   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,650   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,650   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,651   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,668   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,676   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,695   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,695   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,704   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,705   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,708   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,708   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,719   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 20676 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,721   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:30,722   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,001   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,002   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,302   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,315   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,315   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,315   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,339   INFO   [main][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20891 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,340   INFO   [main][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,359   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,447   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,453   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,465   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=40564&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610625402532&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,466   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,471   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,476   INFO   [main][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41648&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,478   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41648&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626198500&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,480   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D20676%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610626230551%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,502   DEBUG   [main][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,502   DEBUG   [main][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,503   DEBUG   [main][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,503   DEBUG   [main][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,511   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,511   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,513   DEBUG   [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@191f7fb
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,539   DEBUG   [NettyServerWorker-3-1][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,539   DEBUG   [NettyServerWorker-3-1][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,539   DEBUG   [NettyServerWorker-3-1][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,539   DEBUG   [NettyServerWorker-3-1][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,545   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,545   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,546   DEBUG   [NettyServerWorker-3-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@150e1db
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,580   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,602   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,603   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,603   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,670   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,671   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,678   INFO   [main][ServiceBean.java:112]   -    [DUBBO] The service ready on spring started. service: com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,684   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,703   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to local registry url : injvm://127.0.0.1/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,703   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,703   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,703   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=20676&qos.enable=false&registry=spring-cloud&release=2.7.3&timestamp=1610626231685, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,718   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20892, export /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:31,723   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,250   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,250   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,254   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,256   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,257   DEBUG   [main][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687] will notify all URLs : []
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,257   DEBUG   [main][RegistryProtocol.java:524]   -    [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,257   DEBUG   [main][RegistryProtocol.java:528]   -    [DUBBO] subscribe url: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,258   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,258   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=20676&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,258   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,260   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,263   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,263   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,267   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,283   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57020 (http) with context path ''
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,297   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,305   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,305   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,305   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,306   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=20676&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610626232297, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,307   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,309   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,311   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,312   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,312   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@a05533" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" exported="true" version="1.0.0" dynamic="true" group="merchant-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,322   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-service 192.168.137.1:57020 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:32,324   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantBootstrap in 9.162 seconds (JVM running for 10.237)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,262   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=41648&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626197509, urls: [dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=20676&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610626231687], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,288   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20892 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,288   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,324   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,324   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,325   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,325   DEBUG   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:33,325   WARN   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:10:58,461   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:01,674   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,463   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   A cookie header was received [1605750040,1605856357] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,465   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,469   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,469   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:524]   -   Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,489   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:546]   -   Completed initialization in 20 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,537   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,564   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,574   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][BaseJdbcLogger.java:159]   -   ==>  Preparing: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=? 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,658   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} created. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,674   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][BaseJdbcLogger.java:159]   -   ==> Parameters: 1(Long)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,676   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Parameters : [1]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,676   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Types : [BIGINT]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,683   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} executed. 8.3411 millis. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,685   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} open
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,687   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Header: [ID, MERCHANT_NAME, MERCHANT_NO, MERCHANT_ADDRESS, MERCHANT_TYPE, BUSINESS_LICENSES_IMG, ID_CARD_FRONT_IMG, ID_CARD_AFTER_IMG, USERNAME, MOBILE, CONTACTS_ADDRESS, AUDIT_STATUS, TENANT_ID]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,694   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Result: [1, alibaba, null, null, null, null, null, null, null, null, null, null, null]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,696   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][BaseJdbcLogger.java:159]   -   <==      Total: 1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,696   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} closed
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,697   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} clearParameters. 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,697   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][PreparedStatementPool.java:129]   -   {conn-10005, pstmt-20000} enter cache
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,698   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:28,705   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:31,678   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:32,258   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:32,258   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:32,259   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:11:58,468   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:01,681   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:28,473   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:28,706   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:28,707   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:28,707   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:31,685   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:32,260   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:32,260   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:32,260   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:12:58,476   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:01,688   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:28,479   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:28,709   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:28,709   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:28,709   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:31,691   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:32,262   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:32,262   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:32,263   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:13:58,482   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:01,695   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:28,486   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:28,711   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:28,711   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:28,711   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:31,698   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:32,265   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:32,265   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:32,265   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:14:58,489   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:01,701   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:28,492   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:28,713   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:28,713   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:28,713   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:31,706   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:32,266   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:32,267   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:32,267   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:15:58,495   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:01,708   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:28,498   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:28,716   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:28,716   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:28,716   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:31,712   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:32,268   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:32,269   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:32,269   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:16:58,502   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:01,714   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:28,506   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:28,718   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:28,718   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:28,718   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:31,717   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:32,270   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:32,270   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:32,270   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:17:58,509   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:01,720   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:28,511   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:28,719   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:28,719   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:28,719   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:31,723   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:32,272   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:32,272   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:32,272   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:18:58,514   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:01,727   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:28,517   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:28,720   DEBUG   [NettyClientWorker-4-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xc26567ea, L:/192.168.137.1:12765 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:28,720   DEBUG   [NettyClientWorker-4-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-4-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:28,720   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12765, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:31,730   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:32,273   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x613441ba, L:/192.168.137.1:12703 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:32,273   DEBUG   [NettyServerWorker-3-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:12703, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:32,273   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:44,270   WARN   [NettyServerWorker-4-1][AbstractServer.java:213]   -    [DUBBO] All clients has disconnected from /192.168.137.1:20892. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:44,270   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-2][DubboProtocol.java:174]   -    [DUBBO] disconnected from /192.168.137.1:20891,url:dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:44,270   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-4][DubboProtocol.java:174]   -    [DUBBO] disconnected from /192.168.137.1:12765,url:dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,035   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,043   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,047   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,290   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2460f3b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,355   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:48,984   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,070   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,075   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,076   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@17492387 {name='merchant-application.yaml', properties={swagger.enable=true, server.servlet.context-path=/merchant}}, NacosPropertySource@26839216 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,094   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,702   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,704   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,711   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,711   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,712   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,713   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,713   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,714   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,715   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,715   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,715   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,870   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,907   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,907   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,910   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,912   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:49,912   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,007   INFO   [main][GenericScope.java:294]   -   BeanFactory id=61d552e6-0838-3d09-aa93-30a053e41df7
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,172   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$8c083fb8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,185   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,196   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,205   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,209   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,210   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,210   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$fe47dc32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,214   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$90f1e48a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,221   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,224   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,228   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$51371e44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,233   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$45022709] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,242   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$cff4ba38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,248   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,249   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,796   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,800   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,820   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:50,822   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$1d65b712] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,366   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,368   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,371   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,374   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,420   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,421   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,432   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,447   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,450   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$558882e8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,457   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,461   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$8f5e7ee8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,465   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$63da7045] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,475   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$1627325e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,479   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$d13e184d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,484   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,488   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,493   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$f8098f7b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,502   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,506   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$45e60dd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,517   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,520   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,540   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,546   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,554   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$227abc48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,560   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,562   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,567   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,572   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,573   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,584   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,589   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,590   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,592   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,602   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2460f3b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,863   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,878   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,884   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,885   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:51,890   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,000   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,000   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 2898 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,888   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,948   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,957   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:52,994   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,008   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,013   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,026   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,042   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,043   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,052   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,057   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,057   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,058   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:20)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,062   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,079   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,084   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,084   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,088   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,089   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,090   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,090   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,145   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,148   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,149   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,149   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,149   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,150   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,168   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,180   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,182   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,197   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,197   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,199   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,200   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,200   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,201   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,202   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,202   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,202   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,203   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,203   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,203   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,204   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,204   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,204   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,205   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,205   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,206   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,207   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,208   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,226   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,234   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,256   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,256   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,261   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,261   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,261   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,261   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,262   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,263   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,263   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,265   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,265   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,278   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 32636 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,279   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,280   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,551   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,551   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,848   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 00:50:56:ff:fe:c0:00:08 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,862   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,862   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,862   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,883   INFO   [main][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20892 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x41557454, L:/192.168.137.1:14331 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,883   INFO   [main][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,903   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,911   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,918   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,930   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=41924&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610623743557&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=20676&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610626231687}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,930   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,936   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,941   INFO   [main][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,943   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,945   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=32636&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D32636%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610626793146%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793146&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,966   DEBUG   [main][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,966   DEBUG   [main][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,967   DEBUG   [main][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,967   DEBUG   [main][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,976   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,976   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:53,977   DEBUG   [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@1c062c8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,007   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-6][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,017   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,019   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,020   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-7][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,023   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,024   DEBUG   [main][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027] will notify all URLs : [dubbo://192.168.137.1:20892?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&register=true&release=2.7.3&side=provider&timestamp=1610626231687]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,025   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,027   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,030   INFO   [main][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, urls: [dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=20676&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610626231687], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,031   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, urls: [dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=20676&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610626231687], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,031   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%26pid%3D32636%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610626793027&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,387   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,532   INFO   [main][PropertySourcedRequestMappingHandlerMapping.java:69]   -   Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,552   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,552   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,556   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,556   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,590   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,591   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,596   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,597   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,597   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,598   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,599   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,599   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,599   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,599   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,599   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,603   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,603   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,603   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,603   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,603   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,669   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,900   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:54,912   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,195   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : merchant-service] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,195   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,241   INFO   [main][DocumentationPluginsBootstrapper.java:160]   -   Context refreshed
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,243   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,245   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,245   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,247   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-8][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,248   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,249   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=32636&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626793027] will notify all URLs : [dubbo://192.168.137.1:20892?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&register=true&release=2.7.3&side=provider&timestamp=1610626231687]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,255   INFO   [main][DocumentationPluginsBootstrapper.java:163]   -   Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,282   INFO   [main][ApiListingReferenceScanner.java:41]   -   Scanning for api listing references
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,407   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingGET_1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,410   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingGET_2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,412   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingGET_3
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,413   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingGET_4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,414   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingGET_5
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,415   INFO   [main][CachingOperationNameGenerator.java:40]   -   Generating unique operation named: handleUsingPOST_1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,437   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,449   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path '/merchant'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,465   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,482   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,483   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,483   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,483   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=32636&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610626795466, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,505   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,507   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,509   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,512   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,512   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=32636&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,514   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@5708e7" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" unexported="false" version="1.0.0" dynamic="true" group="merchant-application" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,525   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.137.1:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:55,529   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 8.294 seconds (JVM running for 9.453)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,512   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=20676&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=32636&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,514   DEBUG   [com.alibaba.nacos.naming.client.listener][RegistryDirectory.java:550]   -    [DUBBO] destroy invoker[dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626198500&version=1.0.0] success. , dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,528   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,529   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,529   ERROR   [com.alibaba.nacos.naming.client.listener][DubboMetadataServiceInvocationHandler.java:54]   -   No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@1bb3fb7, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@19c9b8b]
org.apache.dubbo.rpc.RpcException: No provider available in [invoker :interface org.apache.dubbo.rpc.service.GenericService -> spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20891&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@1bb3fb7, invoker :interface org.apache.dubbo.rpc.service.GenericService -> nacos://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?anyhost=true&application=merchant-service&category=providers&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626230551&version=1.0.0,directory: org.apache.dubbo.registry.integration.RegistryDirectory@19c9b8b]
	at org.apache.dubbo.rpc.cluster.support.RegistryAwareClusterInvoker.doInvoke(RegistryAwareClusterInvoker.java:59)
	at org.apache.dubbo.rpc.cluster.support.AbstractClusterInvoker.invoke(AbstractClusterInvoker.java:248)
	at org.apache.dubbo.rpc.cluster.support.wrapper.MockClusterInvoker.invoke(MockClusterInvoker.java:78)
	at org.apache.dubbo.rpc.proxy.InvokerInvocationHandler.invoke(InvokerInvocationHandler.java:55)
	at org.apache.dubbo.common.bytecode.proxy0.$invoke(proxy0.java)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.invoke(DubboMetadataServiceInvocationHandler.java:49)
	at com.sun.proxy.$Proxy139.getExportedURLs(Unknown Source)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.getExportedURLs(AbstractSpringCloudRegistry.java:328)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry.subscribeDubboServiceURL(AbstractSpringCloudRegistry.java:260)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:193)
	at com.alibaba.cloud.dubbo.registry.AbstractSpringCloudRegistry$1.onApplicationEvent(AbstractSpringCloudRegistry.java:186)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:402)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:359)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.dispatchServiceInstancesChangedEvent(DubboServiceDiscoveryAutoConfiguration.java:161)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration.access$200(DubboServiceDiscoveryAutoConfiguration.java:107)
	at com.alibaba.cloud.dubbo.autoconfigure.DubboServiceDiscoveryAutoConfiguration$NacosConfiguration.lambda$subscribeEventListener$1(DubboServiceDiscoveryAutoConfiguration.java:541)
	at com.alibaba.nacos.client.naming.core.EventDispatcher$Notifier.run(EventDispatcher.java:128)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,530   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687] will notify all URLs : []
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,530   DEBUG   [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:524]   -    [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:19:56,530   DEBUG   [com.alibaba.nacos.naming.client.listener][RegistryProtocol.java:528]   -    [DUBBO] subscribe url: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:01,732   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:25,250   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:31,736   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:41,344   INFO   [dubbo-client-idleCheck-thread-1][ReconnectTimerTask.java:48]   -    [DUBBO] Initial connection to HeaderExchangeClient [channel=org.apache.dubbo.remoting.transport.netty4.NettyClient [192.168.137.1:0 -> /192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:41,345   INFO   [dubbo-client-idleCheck-thread-1][NettyClient.java:142]   -    [DUBBO] Close old netty channel [id: 0x613441ba, L:/192.168.137.1:12703 ! R:/192.168.137.1:20891] on create new netty channel [id: 0xe88bc02d, L:/192.168.137.1:14541 - R:/192.168.137.1:20891], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:41,346   INFO   [dubbo-client-idleCheck-thread-1][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20891 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0xe88bc02d, L:/192.168.137.1:14541 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:49,805   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   A cookie header was received [1605750040,1605856357] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:49,812   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:49,812   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:524]   -   Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:49,829   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:546]   -   Completed initialization in 17 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:50,309   WARN   [http-nio-57010-exec-6][AbstractSerializableParameter.java:421]   -   Illegal DefaultValue  for parameter type integer
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:601)
	at java.lang.Long.valueOf(Long.java:803)
	at io.swagger.models.parameters.AbstractSerializableParameter.getExample(AbstractSerializableParameter.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:688)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(MapSerializer.java:722)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:643)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)
	at springfox.documentation.spring.web.json.JsonSerializer.toJson(JsonSerializer.java:38)
	at springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(Swagger2Controller.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:55,251   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x41557454, L:/192.168.137.1:14331 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:55,251   DEBUG   [NettyServerWorker-4-2][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14331, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:55,252   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:20:55,254   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:01,742   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,660   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,666   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,668   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][BaseJdbcLogger.java:159]   -   ==>  Preparing: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=? 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,678   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][BaseJdbcLogger.java:159]   -   ==> Parameters: 2(Long)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,678   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Parameters : [2]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,679   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Types : [BIGINT]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,680   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} executed. 1.5306 millis. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,681   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50001} open
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,681   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50001} Header: [ID, MERCHANT_NAME, MERCHANT_NO, MERCHANT_ADDRESS, MERCHANT_TYPE, BUSINESS_LICENSES_IMG, ID_CARD_FRONT_IMG, ID_CARD_AFTER_IMG, USERNAME, MOBILE, CONTACTS_ADDRESS, AUDIT_STATUS, TENANT_ID]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,682   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50001} Result: [2, Tencent, null, null, null, null, null, null, null, null, null, null, null]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,683   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][BaseJdbcLogger.java:159]   -   <==      Total: 1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,683   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50001} closed
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,684   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} clearParameters. 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,685   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-9][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:04,687   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:25,257   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:31,745   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:41,346   DEBUG   [NettyClientWorker-1-2][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe88bc02d, L:/192.168.137.1:14541 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:41,347   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14541, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:41,347   DEBUG   [NettyClientWorker-1-2][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-2, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:21:55,260   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:01,750   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:04,687   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x41557454, L:/192.168.137.1:14331 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:04,687   DEBUG   [NettyServerWorker-4-2][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14331, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:04,688   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:25,262   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:31,752   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:41,349   DEBUG   [NettyClientWorker-1-2][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe88bc02d, L:/192.168.137.1:14541 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:41,350   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14541, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:41,350   DEBUG   [NettyClientWorker-1-2][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-2, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:22:55,264   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:01,756   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:04,690   DEBUG   [NettyClientWorker-1-1][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0x41557454, L:/192.168.137.1:14331 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:04,691   DEBUG   [NettyServerWorker-4-2][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14331, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:04,691   DEBUG   [NettyClientWorker-1-1][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-1, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:25,267   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:31,760   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:41,351   DEBUG   [NettyClientWorker-1-2][NettyClientHandler.java:121]   -    [DUBBO] IdleStateEvent triggered, send heartbeat to channel NettyChannel [channel=[id: 0xe88bc02d, L:/192.168.137.1:14541 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:41,352   DEBUG   [NettyServerWorker-4-1][HeartbeatHandler.java:74]   -    [DUBBO] Received heartbeat from remote channel /192.168.137.1:14541, cause: The channel has no data-transmission exceeds a heartbeat period: 60000ms, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:41,352   DEBUG   [NettyClientWorker-1-2][HeartbeatHandler.java:84]   -    [DUBBO] Receive heartbeat response in thread NettyClientWorker-1-2, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:54,231   WARN   [NettyServerWorker-4-2][AbstractServer.java:213]   -    [DUBBO] All clients has disconnected from /192.168.137.1:20892. You can graceful shutdown now., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:54,231   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-11][DubboProtocol.java:174]   -    [DUBBO] disconnected from /192.168.137.1:14331,url:dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&channel.readonly.sent=true&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&heartbeat=60000&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=20676&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610626231687, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 20:23:54,232   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-4][DubboProtocol.java:174]   -    [DUBBO] disconnected from /192.168.137.1:20891,url:dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20891&check=false&codec=dubbo&deprecated=false&dubbo=2.0.2&dynamic=true&generic=true&group=merchant-application&heartbeat=60000&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=20676&qos.enable=false&register=true&register.ip=192.168.137.1&release=2.7.3&remote.application=merchant-application&retries=-1&revision=2.1.0.RELEASE&side=consumer&sticky=false&timeout=3000&timestamp=1610626198500&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
