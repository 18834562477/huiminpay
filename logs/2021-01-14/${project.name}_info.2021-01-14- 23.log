[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:53,473   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:53,482   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:53,487   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:53,749   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d05e843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:53,811   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:55,405   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-application, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20891, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:55,546   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-http.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:55,552   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-application.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:55,553   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@26839216 {name='merchant-application.yaml', properties={swagger.enable=true, server.servlet.context-path=/merchant}}, NacosPropertySource@22734206 {name='spring-boot-http.yaml', properties={management.endpoints.web.exposure.include=refresh,health,info,env, spring.http.encoding.charset=UTF-8, spring.http.encoding.enabled=true, server.use-forward-headers=true, server.servlet.context-path=/, spring.messages.encoding=UTF-8, spring.http.encoding.force=true, server.tomcat.protocol_header=x-forwarded-proto, server.tomcat.remote_ip_header=x-forwarded-for}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:55,573   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,263   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,264   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,272   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,272   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,273   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,274   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,274   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,275   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,276   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,276   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,276   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,276   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,429   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,471   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,471   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,475   WARN   [main][ServiceAnnotationBeanPostProcessor.java:169]   -    [DUBBO] No Spring Bean annotating Dubbo's @Service was found under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,477   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,477   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,587   INFO   [main][GenericScope.java:294]   -   BeanFactory id=a049b3bf-5dcd-3e92-bc9a-6ef8cdaa25d4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,732   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$f4ad344a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,747   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,758   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,804   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,808   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,809   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,810   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$66ecd0c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,814   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$f996d91c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,819   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,822   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,830   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$b9dc12d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,835   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$ada71b9b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,845   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$3899aeca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,853   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:56,855   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:58,421   INFO   [main][InetUtils.java:170]   -   Cannot determine local hostname
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:58,421   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:58,427   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:58,442   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:46:58,444   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$860aaba4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,008   INFO   [main][InetUtils.java:170]   -   Cannot determine local hostname
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,011   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,014   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,018   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,022   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,079   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,079   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,090   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,105   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,108   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$be2d777a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,118   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,122   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$f803737a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,126   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$cc7f64d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,132   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$7ecc26f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,137   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$39e30cdf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,142   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,146   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,151   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$60ae840d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,164   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,167   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$ae8b0266] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,177   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,180   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,204   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,212   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,218   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$8b1fb0da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,224   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,226   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,232   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,237   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,238   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,254   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,260   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,262   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,264   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,271   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8d05e843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,594   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57010 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,607   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,616   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,617   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,623   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,738   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:00,738   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 5156 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,728   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,786   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,799   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,833   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,847   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,853   INFO   [main][AnnotatedInterfaceConfigBeanBuilder.java:84]   -   The configBean[type:ReferenceBean] has been built.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,867   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,884   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,885   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,902   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,906   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,907   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,908   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.init(ReferenceAnnotationBeanPostProcessor.java:269)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor$ReferenceBeanInvocationHandler.access$100(ReferenceAnnotationBeanPostProcessor.java:242)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildInvocationHandler(ReferenceAnnotationBeanPostProcessor.java:236)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.buildProxy(ReferenceAnnotationBeanPostProcessor.java:219)
	at org.apache.dubbo.config.spring.beans.factory.annotation.ReferenceAnnotationBeanPostProcessor.doGetInjectedBean(ReferenceAnnotationBeanPostProcessor.java:134)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.getInjectedObject(AnnotationInjectedBeanPostProcessor.java:360)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor$AnnotatedFieldElement.inject(AnnotationInjectedBeanPostProcessor.java:540)
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:90)
	at org.apache.dubbo.config.spring.beans.factory.annotation.AnnotationInjectedBeanPostProcessor.postProcessPropertyValues(AnnotationInjectedBeanPostProcessor.java:147)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1400)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:592)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:515)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:320)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:318)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:849)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantApplicationBootstrap.main(MerchantApplicationBootstrap.java:20)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,912   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,926   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,932   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,933   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,939   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,941   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : nacos-dubbo-service1]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,942   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : nacos-dubbo-service1], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,942   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : nacos-dubbo-service1] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,958   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : nacos-dubbo-service1] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,959   WARN   [main][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,965   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-application-127.0.0.1:8848.cache, data: {merchant-service/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=20676&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626232297&version=1.0.0, com.huiminpay.merchant.service.MerchantServiceApi=dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=20676&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610626231687}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,966   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,979   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,985   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,986   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:01,987   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service com.huiminpay.merchant.service.MerchantServiceApi from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26interface%3Dcom.huiminpay.merchant.service.MerchantServiceApi%26lazy%3Dfalse%26methods%3DfindMerchantById%26pid%3D11192%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610639221867&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,385   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 4 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,543   INFO   [main][PropertySourcedRequestMappingHandlerMapping.java:69]   -   Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,573   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,573   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,578   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,578   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,613   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,613   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,622   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,623   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,623   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,623   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,624   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,624   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,625   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,625   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,625   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,630   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,630   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,630   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,630   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,631   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,709   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,961   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:02,976   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,292   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : nacos-dubbo-service1] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,292   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,337   INFO   [main][DocumentationPluginsBootstrapper.java:160]   -   Context refreshed
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,340   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:1) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,342   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : nacos-dubbo-service1 , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,343   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : nacos-dubbo-service1]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,344   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : nacos-dubbo-service1], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,344   DEBUG   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : nacos-dubbo-service1] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,344   WARN   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,351   INFO   [main][DocumentationPluginsBootstrapper.java:163]   -   Found 1 custom documentation plugin(s)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,389   INFO   [main][ApiListingReferenceScanner.java:41]   -   Scanning for api listing references
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,512   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57010"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,533   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57010 (http) with context path '/merchant'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,551   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,584   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,598   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,606   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,613   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,614   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,614   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,614   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&dubbo=2.0.2&pid=11192&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610639223551, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,628   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,639   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,646   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,668   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,674   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,689   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,690   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,692   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,694   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,694   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,695   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,695   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,696   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,696   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,697   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,697   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,697   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,698   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,698   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,698   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,699   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,700   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,701   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,701   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,702   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,721   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,722   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,727   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,728   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,728   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,728   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,728   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,728   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,729   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,733   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,733   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,743   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 11192 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,745   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:03,745   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,023   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,024   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,335   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 60:f2:62:ff:fe:f8:14:f2 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,353   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,354   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,354   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,360   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20891, export /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,362   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,365   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,414   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,415   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&bind.ip=192.168.137.1&bind.port=20891&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=11192&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,416   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@65e237" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-application" register="true" deprecated="false" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,429   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-application 192.168.1.115:57010 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:04,433   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantApplicationBootstrap in 12.809 seconds (JVM running for 14.491)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:15,363   INFO   [main][:]   -   using logger: org.apache.dubbo.common.logger.slf4j.Slf4jLoggerAdapter
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:15,371   INFO   [main][WelcomeLogoApplicationListener.java:63]   -   

 :: Dubbo Spring Boot (v2.7.1) : https://github.com/apache/incubator-dubbo-spring-boot-project
 :: Dubbo (v2.7.3) : https://github.com/apache/incubator-dubbo
 :: Discuss group : dev@dubbo.apache.org

[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:15,375   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:15,610   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0c357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:15,671   INFO   [pool-3-thread-1][AwaitingNonWebApplicationListener.java:140]   -    [Dubbo] Current Spring Boot Application is await...
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,252   INFO   [main][OverrideDubboConfigApplicationListener.java:68]   -   Dubbo Config was overridden by externalized configuration {dubbo.application.name=merchant-service, dubbo.application.qos-enable=false, dubbo.config.multiple=true, dubbo.consumer.check=false, dubbo.consumer.retries=-1, dubbo.consumer.timeout=3000, dubbo.protocol.name=dubbo, dubbo.protocol.port=20892, dubbo.registry.address=nacos://127.0.0.1:8848, dubbo.scan.base‐packages=com.huiminpay.merchant}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,340   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-starter-druid.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,346   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'spring-boot-mybatis-plus.yaml', group: 'COMMON_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,351   INFO   [main][NacosPropertySourceBuilder.java:87]   -   Loading nacos data, dataId: 'merchant-service.yaml', group: 'HUIMINPAY_GROUP'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,352   INFO   [main][PropertySourceBootstrapConfiguration.java:98]   -   Located property source: CompositePropertySource {name='NACOS', propertySources=[NacosPropertySource@14344773 {name='merchant-service.yaml', properties={spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.username=root, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, mybatis-plus.mapper-locations=classpath:com/huiminpay/merchant/mapper/*.xml, servlet.servlet.context-path=/merchant-service, mybatis-plus.typeAliasesPackage=com.huiminpay.merchant.entity, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.password=16220230}}, NacosPropertySource@23427560 {name='spring-boot-mybatis-plus.yaml', properties={mybatis-plus.global-config.field-strategy=0, mybatis-plus.global-config.db-column-underline=true, mybatis-plus.configuration.cache-enabled=false, mybatis-plus.global-config.refresh-mapper=true, mybatis-plus.mapper-locations=classpath:com/huiminpay/*/mapper/*.xml, mybatis-plus.typeAliasesPackage=com.huimin.user.entity, mybatis-plus.configuration.map-underscore-to-camel-case=true, mybatis-plus.global-config.id-type=0}}, NacosPropertySource@33498428 {name='spring-boot-starter-druid.yaml', properties={spring.datasource.druid.max-active=20, spring.datasource.druid.min-idle=5, spring.datasource.druid.web-stat-filter.principal-cookie-name=admin, spring.datasource.druid.min-evictable-idle-time-millis=300000, spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver, spring.datasource.druid.test-on-return=false, spring.datasource.druid.time-between-eviction-runs-millis=60000, spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*, spring.datasource.druid.filters=config,stat,wall,log4j2, spring.datasource.druid.filter.stat.slow-sql-millis=1, spring.datasource.druid.test-on-borrow=true, spring.datasource.druid.stat-view-servlet.login-password=admin, spring.datasource.druid.validation-query=SELECT 1 FROM DUAL, spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*, spring.datasource.druid.web-stat-filter.session-stat-enable=false, spring.datasource.druid.test-while-idle=true, spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20, spring.datasource.druid.web-stat-filter.enabled=true, spring.datasource.druid.web-stat-filter.session-stat-max-count=1000, spring.datasource.druid.stat-view-servlet.reset-enable=false, spring.datasource.druid.filter.stat.log-slow-sql=true, spring.datasource.druid.web-stat-filter.url-pattern=/*, spring.datasource.druid.stat-view-servlet.allow=127.0.0.1, spring.datasource.druid.web-stat-filter.principal-session-name=admin, spring.datasource.druid.web-stat-filter.profile-enable=true, spring.datasource.password=16220230, spring.datasource.username=root, spring.datasource.druid.stat-view-servlet.deny=127.0.0.1, spring.datasource.druid.stat-view-servlet.login-username=admin, spring.datasource.druid.stat-view-servlet.enabled=true, spring.datasource.url=jdbc:mysql://localhost:3306/huiminpay_merchant_service?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&useSSL=false, spring.datasource.druid.initial-size=5, spring.datasource.druid.pool-prepared-statements=true, spring.datasource.druid.aop-patterns=com.huimin.*.service.*, spring.datasource.type=com.alibaba.druid.pool.DruidDataSource, spring.datasource.druid.max-wait=60000}}]}
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,371   INFO   [main][SpringApplication.java:675]   -   No active profile set, falling back to default profiles: default
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,772   DEBUG   [main][LogFactory.java:105]   -   Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,780   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'appMapper' and 'com.huiminpay.merchant.mapper.AppMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,780   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'merchantMapper' and 'com.huiminpay.merchant.mapper.MerchantMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,780   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'staffMapper' and 'com.huiminpay.merchant.mapper.StaffMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,780   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'storeMapper' and 'com.huiminpay.merchant.mapper.StoreMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,780   WARN   [main][Logger.java:44]   -   Skipping MapperFactoryBean with name 'storeStaffMapper' and 'com.huiminpay.merchant.mapper.StoreStaffMapper' mapperInterface. Bean already defined with the same name!
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,781   WARN   [main][Logger.java:44]   -   No MyBatis mapper was found in '[com.huiminpay.merchant.mapper]' package. Please check your configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,875   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-config' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,877   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'nacos-discovery' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,897   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ApplicationConfig] within prefix [dubbo.applications]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,897   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.modules]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,897   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.RegistryConfig] within prefix [dubbo.registries]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,897   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProtocolConfig] within prefix [dubbo.protocols]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,897   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitors]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,898   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.providers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,898   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ConsumerConfig] within prefix [dubbo.consumers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,898   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-centers]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,898   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-reports]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,899   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ApplicationConfig#0, class : org.apache.dubbo.config.ApplicationConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,899   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ApplicationConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ModuleConfig] within prefix [dubbo.module]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.RegistryConfig#0, class : org.apache.dubbo.config.RegistryConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.RegistryConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ProtocolConfig#0, class : org.apache.dubbo.config.ProtocolConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ProtocolConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MonitorConfig] within prefix [dubbo.monitor]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.ProviderConfig] within prefix [dubbo.provider]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,900   INFO   [main][DubboConfigBindingRegistrar.java:127]   -   The dubbo config bean definition [name : org.apache.dubbo.config.ConsumerConfig#0, class : org.apache.dubbo.config.ConsumerConfig] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,901   INFO   [main][DubboConfigBindingRegistrar.java:151]   -   The BeanPostProcessor bean definition [org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigBindingBeanPostProcessor] for dubbo config bean [name : org.apache.dubbo.config.ConsumerConfig#0] has been registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,901   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.spring.ConfigCenterBean] within prefix [dubbo.config-center]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:17,901   DEBUG   [main][DubboConfigBindingRegistrar.java:96]   -   There is no property for binding to dubbo config class [org.apache.dubbo.config.MetadataReportConfig] within prefix [dubbo.metadata-report]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,064   WARN   [main][EndpointId.java:135]   -   Endpoint ID 'service-registry' contains invalid characters, please migrate to a valid format.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,112   INFO   [main][ServiceAnnotationBeanPostProcessor.java:204]   -    [DUBBO] BeanNameGenerator bean can't be found in BeanFactory with name [org.springframework.context.annotation.internalConfigurationBeanNameGenerator], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,112   INFO   [main][ServiceAnnotationBeanPostProcessor.java:206]   -    [DUBBO] BeanNameGenerator will be a instance of org.springframework.context.annotation.AnnotationBeanNameGenerator , it maybe a potential problem on bean name generation., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,115   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,117   DEBUG   [main][ClassPathScanningCandidateComponentProvider.java:437]   -   Identified candidate component class: file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,122   INFO   [main][ServiceAnnotationBeanPostProcessor.java:284]   -    [DUBBO] The BeanDefinition[Root bean: class [org.apache.dubbo.config.spring.ServiceBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] of ServiceBean has been registered with name : ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,122   INFO   [main][ServiceAnnotationBeanPostProcessor.java:161]   -    [DUBBO] 1 annotated Dubbo's @Service Components { [Bean definition with name 'merchantService': Generic bean: class [com.huiminpay.merchant.service.impl.MerchantService]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\Project1\huiminpay\huiminpay-merchant\huiminpay-merchant-service\target\classes\com\huiminpay\merchant\service\impl\MerchantService.class]] } were scanned under package[com.huiminpay.merchant], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,126   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboRelaxedBinding2AutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,126   INFO   [main][ConfigurationClassPostProcessor.java:380]   -   Cannot enhance @Configuration bean definition 'org.apache.dubbo.spring.boot.autoconfigure.DubboAutoConfiguration' since its singleton instance has been created too early. The typical cause is a non-static @Bean method with a BeanDefinitionRegistryPostProcessor return type: Consider declaring such methods as 'static'.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,236   INFO   [main][GenericScope.java:294]   -   BeanFactory id=87720d46-b377-3f5f-88ee-c00274e345bd
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,265   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,366   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3b6c05a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,466   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,477   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,480   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboOpenFeignAutoConfiguration$$EnhancerBySpringCGLIB$$77780f5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,492   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubbo.cloud-com.alibaba.cloud.dubbo.env.DubboCloudProperties' of type [com.alibaba.cloud.dubbo.env.DubboCloudProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,507   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'metadataJsonResolver' of type [com.alibaba.cloud.dubbo.metadata.resolver.DubboServiceBeanMetadataResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,518   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.apache.dubbo.config.ApplicationConfig#0' of type [org.apache.dubbo.config.ApplicationConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,522   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboProtocolConfigSupplier' of type [com.alibaba.cloud.dubbo.metadata.DubboProtocolConfigSupplier] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,523   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceExporter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,524   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboMetadataAutoConfiguration$$EnhancerBySpringCGLIB$$e9b7abd8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,528   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration' of type [com.alibaba.cloud.dubbo.autoconfigure.DubboServiceAutoConfiguration$$EnhancerBySpringCGLIB$$7c61b430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,535   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboGenericServiceFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,539   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'dubboMetadataConfigServiceProxy' of type [com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,543   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3ca6edea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,551   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$3071f6af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,560   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.commons.util.UtilAutoConfiguration' of type [org.springframework.cloud.commons.util.UtilAutoConfiguration$$EnhancerBySpringCGLIB$$bb6489de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,566   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtilsProperties' of type [org.springframework.cloud.commons.util.InetUtilsProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:18,567   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'inetUtils' of type [org.springframework.cloud.commons.util.InetUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:20,124   INFO   [main][InetUtils.java:170]   -   Cannot determine local hostname
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:20,124   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosProperties' of type [com.alibaba.cloud.nacos.NacosDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:20,129   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'nacosDiscoveryClient' of type [com.alibaba.cloud.nacos.discovery.NacosDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:20,142   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'server-org.springframework.boot.autoconfigure.web.ServerProperties' of type [org.springframework.boot.autoconfigure.web.ServerProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:20,145   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration$$EnhancerBySpringCGLIB$$8d586b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,748   INFO   [main][InetUtils.java:170]   -   Cannot determine local hostname
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,750   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryProperties' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,756   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'simpleDiscoveryClient' of type [org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,759   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'compositeDiscoveryClient' of type [org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,762   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.util.JSONUtils' of type [com.alibaba.cloud.dubbo.util.JSONUtils] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,824   WARN   [main][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,825   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository' of type [com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,847   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestParamServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,864   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.http-org.springframework.boot.autoconfigure.http.HttpProperties' of type [org.springframework.boot.autoconfigure.http.HttpProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,868   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$40f8528e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,874   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'stringHttpMessageConverter' of type [org.springframework.http.converter.StringHttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,879   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration' of type [org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration$$EnhancerBySpringCGLIB$$7ace4e8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,883   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration$$EnhancerBySpringCGLIB$$4f4a3feb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,889   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration$$EnhancerBySpringCGLIB$$1970204] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,897   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$$EnhancerBySpringCGLIB$$bcade7f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,902   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties' of type [org.springframework.boot.autoconfigure.jackson.JacksonProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,906   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'standardJacksonObjectMapperBuilderCustomizer' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,912   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration$$EnhancerBySpringCGLIB$$e3795f21] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,921   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'parameterNamesModule' of type [com.fasterxml.jackson.module.paramnames.ParameterNamesModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,926   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration' of type [org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$$EnhancerBySpringCGLIB$$3155dd7a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,937   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jsonComponentModule' of type [org.springframework.boot.jackson.JsonComponentModule] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,941   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapperBuilder' of type [org.springframework.http.converter.json.Jackson2ObjectMapperBuilder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,962   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'jacksonObjectMapper' of type [com.fasterxml.jackson.databind.ObjectMapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,979   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'mappingJackson2HttpMessageConverter' of type [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,985   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration' of type [org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$$EnhancerBySpringCGLIB$$dea8bee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,991   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'messageConverters' of type [org.springframework.boot.autoconfigure.http.HttpMessageConverters] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,993   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestBodyServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:21,998   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.RequestHeaderServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,004   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver' of type [com.alibaba.cloud.dubbo.service.parameter.PathVariableServiceParameterResolver] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,006   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory' of type [com.alibaba.cloud.dubbo.service.DubboGenericServiceExecutionContextFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,022   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,028   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,030   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,032   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'relaxedDubboConfigBinder' of type [org.apache.dubbo.spring.boot.autoconfigure.BinderDubboConfigBinder] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,039   INFO   [main][PostProcessorRegistrationDelegate.java:330]   -   Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$fd0c357] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,324   INFO   [main][TomcatWebServer.java:90]   -   Tomcat initialized with port(s): 57020 (http)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,339   INFO   [main][DirectJDKLog.java:173]   -   Initializing ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,346   INFO   [main][DirectJDKLog.java:173]   -   Starting service [Tomcat]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,347   INFO   [main][DirectJDKLog.java:173]   -   Starting Servlet engine: [Apache Tomcat/9.0.16]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,351   INFO   [main][DirectJDKLog.java:173]   -   The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files (x86)\Java\jdk1.8.0_131\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:\Develop\;D:\myTools\apache-maven-3.6.3\bin;D:\app\86188\product\11.2.0\dbhome_1\bin;C:\Program Files\Java\jdk1.8.0_261\bin;C:\Program Files\Java\jdk1.8.0_261\jre\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\Java\jdk1.8.0_261\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Tools\Git\cmd;D:\lib\hadoop\bin;D:\python\Scripts\;D:\python\;C:\Users\86188\AppData\Local\Microsoft\WindowsApps;;.]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,466   INFO   [main][DirectJDKLog.java:173]   -   Initializing Spring embedded WebApplicationContext
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,466   INFO   [main][ServletWebServerApplicationContext.java:296]   -   Root WebApplicationContext: initialization completed in 5085 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:22,896   INFO   [main][DruidDataSourceAutoConfigure.java:56]   -   Init DruidDataSource
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,133   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10001,procId-338} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,145   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10002,procId-339} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,155   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10003,procId-340} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,157   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10004,procId-341} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,160   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005,procId-342} connected
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,164   INFO   [main][DruidDataSource.java:1002]   -   {dataSource-1} inited
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,821   DEBUG   [main][GlobalConfigUtils.java:106]   -   DeBug: MyBatis Plus Global configuration Initializing !
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,831   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,832   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.SelectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,833   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,833   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,834   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,835   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.baomidou.mybatisplus.core.mapper.SqlRunner.Count
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,869   DEBUG   [main][VFS.java:77]   -   Using VFS adapter com.baomidou.mybatisplus.autoconfigure.SpringBootVFS
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,871   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.App matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,871   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Merchant matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,872   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Staff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,872   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.Store matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,873   DEBUG   [main][ResolverUtil.java:256]   -   Checking to see if class com.huiminpay.merchant.entity.StoreStaff matches criteria [is assignable to Object]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,879   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,881   DEBUG   [main][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,964   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,968   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,971   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,988   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,990   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,997   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:23,999   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,000   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,002   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,004   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,007   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,010   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,014   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,016   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,019   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,021   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,023   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.AppMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,030   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,033   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,035   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,037   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,040   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,043   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,047   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,048   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,052   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,054   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,057   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,060   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,067   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,069   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,071   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,074   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,076   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.MerchantMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,080   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,082   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,083   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,084   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,086   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,087   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,089   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,090   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,092   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,094   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,096   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,097   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,099   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,101   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,103   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,105   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,107   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,115   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,116   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,118   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,119   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,120   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,123   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,126   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,126   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,128   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,129   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,131   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,133   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,135   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,137   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,140   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,141   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,143   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,147   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.insert
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,149   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.delete
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,151   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,153   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,154   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.deleteBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,157   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.update
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,158   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.updateById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,159   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectById
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,164   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectBatchIds
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,165   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectByMap
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,167   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectOne
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,169   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectCount
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,171   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMaps
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,173   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectMapsPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,175   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectObjs
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,177   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectList
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,179   DEBUG   [main][MybatisConfiguration.java:85]   -   addMappedStatement: com.huiminpay.merchant.mapper.StoreStaffMapper.selectPage
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,204   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,204   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,209   WARN   [main][URLConfigurationSource.java:121]   -   No URLs will be polled as dynamic configuration sources.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,210   INFO   [main][URLConfigurationSource.java:122]   -   To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,248   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,249   DEBUG   [main][ResourceBundleMessageInterpolator.java:89]   -   Loaded expression factory via original TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,256   DEBUG   [main][TraversableResolvers.java:60]   -   Cannot find javax.persistence.Persistence on classpath. Assuming non JPA 2 environment. All properties will per default be traversable.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,257   DEBUG   [main][ConfigurationImpl.java:148]   -   Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,258   DEBUG   [main][ConfigurationImpl.java:180]   -   Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,258   DEBUG   [main][ConfigurationImpl.java:194]   -   Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,259   DEBUG   [main][ValidationXmlParser.java:120]   -   Trying to load META-INF/validation.xml for XML based Validator configuration.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,259   DEBUG   [main][ResourceLoaderHelper.java:53]   -   Trying to load META-INF/validation.xml via user class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,259   DEBUG   [main][ResourceLoaderHelper.java:60]   -   Trying to load META-INF/validation.xml via TCCL
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,259   DEBUG   [main][ResourceLoaderHelper.java:66]   -   Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,260   DEBUG   [main][ValidationXmlParser.java:127]   -   No META-INF/validation.xml found. Using annotation based configuration only.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,263   DEBUG   [main][ValidatorFactoryImpl.java:578]   -   HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,264   DEBUG   [main][ValidatorFactoryImpl.java:579]   -   HV000234: Using org.hibernate.validator.internal.engine.resolver.TraverseAllTraversableResolver as ValidatorFactory-scoped traversable resolver.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,264   DEBUG   [main][ValidatorFactoryImpl.java:580]   -   HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,264   DEBUG   [main][ValidatorFactoryImpl.java:581]   -   HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,264   DEBUG   [main][ValidatorFactoryImpl.java:582]   -   HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,396   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService 'applicationTaskExecutor'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,688   INFO   [main][ExecutorConfigurationSupport.java:171]   -   Initializing ExecutorService
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,717   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.RegistryConfig#0] have been binding by prefix of configuration properties : dubbo.registry
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,724   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ProtocolConfig#0] have been binding by prefix of configuration properties : dubbo.protocol
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:24,742   INFO   [main][DubboConfigBindingBeanPostProcessor.java:109]   -   The properties of bean [name : org.apache.dubbo.config.ConsumerConfig#0] have been binding by prefix of configuration properties : dubbo.consumer
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,189   INFO   [main][EndpointLinksResolver.java:59]   -   Exposing 2 endpoint(s) beneath base path '/actuator'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,263   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Protocol$Adaptive implements org.apache.dubbo.rpc.Protocol {
public void destroy()  {
throw new UnsupportedOperationException("The method public abstract void org.apache.dubbo.rpc.Protocol.destroy() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public int getDefaultPort()  {
throw new UnsupportedOperationException("The method public abstract int org.apache.dubbo.rpc.Protocol.getDefaultPort() of interface org.apache.dubbo.rpc.Protocol is not adaptive method!");
}
public org.apache.dubbo.rpc.Exporter export(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.export(arg0);
}
public org.apache.dubbo.rpc.Invoker refer(java.lang.Class arg0, org.apache.dubbo.common.URL arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.Protocol) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.Protocol extension = (org.apache.dubbo.rpc.Protocol)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.Protocol.class).getExtension(extName);
return extension.refer(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,321   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ProxyFactory$Adaptive implements org.apache.dubbo.rpc.ProxyFactory {
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0);
}
public java.lang.Object getProxy(org.apache.dubbo.rpc.Invoker arg0, boolean arg1) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.Invoker argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getProxy(arg0, arg1);
}
public org.apache.dubbo.rpc.Invoker getInvoker(java.lang.Object arg0, java.lang.Class arg1, org.apache.dubbo.common.URL arg2) throws org.apache.dubbo.rpc.RpcException {
if (arg2 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg2;
String extName = url.getParameter("proxy", "javassist");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.ProxyFactory) name from url (" + url.toString() + ") use keys([proxy])");
org.apache.dubbo.rpc.ProxyFactory extension = (org.apache.dubbo.rpc.ProxyFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.ProxyFactory.class).getExtension(extName);
return extension.getInvoker(arg0, arg1, arg2);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,379   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-application] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,437   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Cluster$Adaptive implements org.apache.dubbo.rpc.cluster.Cluster {
public org.apache.dubbo.rpc.Invoker join(org.apache.dubbo.rpc.cluster.Directory arg0) throws org.apache.dubbo.rpc.RpcException {
if (arg0 == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument == null");
if (arg0.getUrl() == null) throw new IllegalArgumentException("org.apache.dubbo.rpc.cluster.Directory argument getUrl() == null");
org.apache.dubbo.common.URL url = arg0.getUrl();
String extName = url.getParameter("cluster", "failover");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.Cluster) name from url (" + url.toString() + ") use keys([cluster])");
org.apache.dubbo.rpc.cluster.Cluster extension = (org.apache.dubbo.rpc.cluster.Cluster)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.Cluster.class).getExtension(extName);
return extension.join(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,470   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,475   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,476   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,485   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.registry;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RegistryFactory$Adaptive implements org.apache.dubbo.registry.RegistryFactory {
public org.apache.dubbo.registry.Registry getRegistry(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.registry.RegistryFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.registry.RegistryFactory extension = (org.apache.dubbo.registry.RegistryFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.registry.RegistryFactory.class).getExtension(extName);
return extension.getRegistry(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,490   INFO   [main][QosProtocolWrapper.java:89]   -    [DUBBO] qos won't be started because it is disabled. Please check dubbo.application.qos.enable is configured either in system property, dubbo.properties or XML/spring-boot configuration., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,490   WARN   [main][SpringExtensionFactory.java:86]   -    [DUBBO] No spring extension (bean) named:applicationContext, try to find an extension (bean) of type org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,491   DEBUG   [main][SpringExtensionFactory.java:99]   -    [DUBBO] Error when get spring extension(bean) for type:org.springframework.context.ConfigurableApplicationContext, dubbo version: 2.7.3, current host: 192.168.137.1
org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.springframework.context.ConfigurableApplicationContext' available
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:343)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.getBean(DefaultListableBeanFactory.java:335)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1123)
	at org.apache.dubbo.config.spring.extension.SpringExtensionFactory.getExtension(SpringExtensionFactory.java:94)
	at org.apache.dubbo.common.extension.factory.AdaptiveExtensionFactory.getExtension(AdaptiveExtensionFactory.java:47)
	at org.apache.dubbo.common.extension.ExtensionLoader.injectExtension(ExtensionLoader.java:566)
	at org.apache.dubbo.common.extension.ExtensionLoader.createExtension(ExtensionLoader.java:535)
	at org.apache.dubbo.common.extension.ExtensionLoader.getExtension(ExtensionLoader.java:351)
	at org.apache.dubbo.registry.RegistryFactory$Adaptive.getRegistry(RegistryFactory$Adaptive.java)
	at org.apache.dubbo.registry.integration.RegistryProtocol.refer(RegistryProtocol.java:379)
	at org.apache.dubbo.qos.protocol.QosProtocolWrapper.refer(QosProtocolWrapper.java:70)
	at org.apache.dubbo.rpc.protocol.ProtocolListenerWrapper.refer(ProtocolListenerWrapper.java:69)
	at org.apache.dubbo.rpc.protocol.ProtocolFilterWrapper.refer(ProtocolFilterWrapper.java:128)
	at org.apache.dubbo.rpc.Protocol$Adaptive.refer(Protocol$Adaptive.java)
	at org.apache.dubbo.config.ReferenceConfig.createProxy(ReferenceConfig.java:401)
	at org.apache.dubbo.config.ReferenceConfig.init(ReferenceConfig.java:329)
	at org.apache.dubbo.config.ReferenceConfig.get(ReferenceConfig.java:250)
	at com.alibaba.cloud.dubbo.service.DubboGenericServiceFactory.create(DubboGenericServiceFactory.java:80)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceInvocationHandler.<init>(DubboMetadataServiceInvocationHandler.java:41)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.newProxy(DubboMetadataServiceProxy.java:83)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.lambda$initProxy$0(DubboMetadataServiceProxy.java:52)
	at java.util.concurrent.ConcurrentHashMap.computeIfAbsent(ConcurrentHashMap.java:1660)
	at com.alibaba.cloud.dubbo.service.DubboMetadataServiceProxy.initProxy(DubboMetadataServiceProxy.java:51)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initDubboMetadataServiceProxy(DubboServiceMetadataRepository.java:640)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$null$4(DubboServiceMetadataRepository.java:619)
	at java.util.ArrayList.forEach(ArrayList.java:1249)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.lambda$initSubscribedDubboMetadataService$5(DubboServiceMetadataRepository.java:615)
	at java.util.Optional.ifPresent(Optional.java:159)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initSubscribedDubboMetadataService(DubboServiceMetadataRepository.java:614)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:286)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.initializeMetadata(DubboServiceMetadataRepository.java:260)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository.afterSingletonsInstantiated(DubboServiceMetadataRepository.java:253)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$FastClassBySpringCGLIB$$4ef4b7bd.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:749)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688)
	at com.alibaba.cloud.dubbo.metadata.repository.DubboServiceMetadataRepository$$EnhancerBySpringCGLIB$$5cb1e8f7.afterSingletonsInstantiated(<generated>)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:866)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:877)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:549)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:142)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:316)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1260)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1248)
	at com.huiminpay.merchant.MerchantBootstrap.main(MerchantBootstrap.java:19)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,496   WARN   [main][SpringExtensionFactory.java:104]   -    [DUBBO] No spring extension (bean) named:applicationContext, type:org.springframework.context.ConfigurableApplicationContext found, stop get bean., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,509   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.rpc.cluster;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class RouterFactory$Adaptive implements org.apache.dubbo.rpc.cluster.RouterFactory {
public org.apache.dubbo.rpc.cluster.Router getRouter(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getProtocol();
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.rpc.cluster.RouterFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.rpc.cluster.RouterFactory extension = (org.apache.dubbo.rpc.cluster.RouterFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.rpc.cluster.RouterFactory.class).getExtension(extName);
return extension.getRouter(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,516   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,516   DEBUG   [main][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,521   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,619   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Transporter$Adaptive implements org.apache.dubbo.remoting.Transporter {
public org.apache.dubbo.remoting.Client connect(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("client", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([client, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.connect(arg0, arg1);
}
public org.apache.dubbo.remoting.Server bind(org.apache.dubbo.common.URL arg0, org.apache.dubbo.remoting.ChannelHandler arg1) throws org.apache.dubbo.remoting.RemotingException {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("server", url.getParameter("transporter", "netty"));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Transporter) name from url (" + url.toString() + ") use keys([server, transporter])");
org.apache.dubbo.remoting.Transporter extension = (org.apache.dubbo.remoting.Transporter)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Transporter.class).getExtension(extName);
return extension.bind(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,632   DEBUG   [main][InternalLoggerFactory.java:43]   -   Using SLF4J as the default logging framework
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,634   DEBUG   [main][MultithreadEventLoopGroup.java:44]   -   -Dio.netty.eventLoopThreads: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,654   DEBUG   [main][NioEventLoop.java:105]   -   -Dio.netty.noKeySetOptimization: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,655   DEBUG   [main][NioEventLoop.java:106]   -   -Dio.netty.selectorAutoRebuildThreshold: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,658   DEBUG   [main][PlatformDependent.java:955]   -   Platform: Windows
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,660   DEBUG   [main][PlatformDependent0.java:395]   -   -Dio.netty.noUnsafe: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,660   DEBUG   [main][PlatformDependent0.java:871]   -   Java version: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,661   DEBUG   [main][PlatformDependent0.java:120]   -   sun.misc.Unsafe.theUnsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,662   DEBUG   [main][PlatformDependent0.java:144]   -   sun.misc.Unsafe.copyMemory: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,663   DEBUG   [main][PlatformDependent0.java:182]   -   java.nio.Buffer.address: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,664   DEBUG   [main][PlatformDependent0.java:243]   -   direct buffer constructor: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,665   DEBUG   [main][PlatformDependent0.java:313]   -   java.nio.Bits.unaligned: available, true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,665   DEBUG   [main][PlatformDependent0.java:378]   -   jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,665   DEBUG   [main][PlatformDependent0.java:385]   -   java.nio.DirectByteBuffer.<init>(long, int): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,666   DEBUG   [main][PlatformDependent.java:992]   -   sun.misc.Unsafe: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,666   DEBUG   [main][PlatformDependent.java:1086]   -   -Dio.netty.tmpdir: C:\Users\86188\AppData\Local\Temp (java.io.tmpdir)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,667   DEBUG   [main][PlatformDependent.java:1165]   -   -Dio.netty.bitMode: 32 (sun.arch.data.model)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,668   DEBUG   [main][PlatformDependent.java:157]   -   -Dio.netty.maxDirectMemory: 259522560 bytes
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,668   DEBUG   [main][PlatformDependent.java:164]   -   -Dio.netty.uninitializedArrayAllocationThreshold: -1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,670   DEBUG   [main][CleanerJava6.java:92]   -   java.nio.ByteBuffer.cleaner(): available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,670   DEBUG   [main][PlatformDependent.java:184]   -   -Dio.netty.noPreferDirect: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,671   DEBUG   [main][PlatformDependent.java:860]   -   org.jctools-core.MpscChunkedArrayQueue: available
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,690   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.remoting;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Dispatcher$Adaptive implements org.apache.dubbo.remoting.Dispatcher {
public org.apache.dubbo.remoting.ChannelHandler dispatch(org.apache.dubbo.remoting.ChannelHandler arg0, org.apache.dubbo.common.URL arg1)  {
if (arg1 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg1;
String extName = url.getParameter("dispatcher", url.getParameter("dispather", url.getParameter("channel.handler", "all")));
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.remoting.Dispatcher) name from url (" + url.toString() + ") use keys([dispatcher, dispather, channel.handler])");
org.apache.dubbo.remoting.Dispatcher extension = (org.apache.dubbo.remoting.Dispatcher)ExtensionLoader.getExtensionLoader(org.apache.dubbo.remoting.Dispatcher.class).getExtension(extName);
return extension.dispatch(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,700   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.common.threadpool;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class ThreadPool$Adaptive implements org.apache.dubbo.common.threadpool.ThreadPool {
public java.util.concurrent.Executor getExecutor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("threadpool", "fixed");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.common.threadpool.ThreadPool) name from url (" + url.toString() + ") use keys([threadpool])");
org.apache.dubbo.common.threadpool.ThreadPool extension = (org.apache.dubbo.common.threadpool.ThreadPool)ExtensionLoader.getExtensionLoader(org.apache.dubbo.common.threadpool.ThreadPool.class).getExtension(extName);
return extension.getExecutor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,723   DEBUG   [main][ResourceLeakDetector.java:129]   -   -Dio.netty.leakDetection.level: simple
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,724   DEBUG   [main][ResourceLeakDetector.java:130]   -   -Dio.netty.leakDetection.targetRecords: 4
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,729   DEBUG   [main][PooledByteBufAllocator.java:126]   -   -Dio.netty.allocator.numHeapArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,730   DEBUG   [main][PooledByteBufAllocator.java:127]   -   -Dio.netty.allocator.numDirectArenas: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,730   DEBUG   [main][PooledByteBufAllocator.java:129]   -   -Dio.netty.allocator.pageSize: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,730   DEBUG   [main][PooledByteBufAllocator.java:134]   -   -Dio.netty.allocator.maxOrder: 11
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,730   DEBUG   [main][PooledByteBufAllocator.java:138]   -   -Dio.netty.allocator.chunkSize: 16777216
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,731   DEBUG   [main][PooledByteBufAllocator.java:139]   -   -Dio.netty.allocator.tinyCacheSize: 512
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,731   DEBUG   [main][PooledByteBufAllocator.java:140]   -   -Dio.netty.allocator.smallCacheSize: 256
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,731   DEBUG   [main][PooledByteBufAllocator.java:141]   -   -Dio.netty.allocator.normalCacheSize: 64
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,732   DEBUG   [main][PooledByteBufAllocator.java:142]   -   -Dio.netty.allocator.maxCachedBufferCapacity: 32768
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,732   DEBUG   [main][PooledByteBufAllocator.java:143]   -   -Dio.netty.allocator.cacheTrimInterval: 8192
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,732   DEBUG   [main][PooledByteBufAllocator.java:144]   -   -Dio.netty.allocator.useCacheForAllThreads: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,732   DEBUG   [main][PooledByteBufAllocator.java:145]   -   -Dio.netty.allocator.maxCachedByteBuffersPerChunk: 1023
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,735   DEBUG   [main][InternalThreadLocalMap.java:54]   -   -Dio.netty.threadLocalMap.stringBuilder.initialSize: 1024
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,736   DEBUG   [main][InternalThreadLocalMap.java:57]   -   -Dio.netty.threadLocalMap.stringBuilder.maxSize: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,749   DEBUG   [main][DefaultChannelId.java:79]   -   -Dio.netty.processId: 21116 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,751   DEBUG   [main][NetUtil.java:139]   -   -Djava.net.preferIPv4Stack: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:25,751   DEBUG   [main][NetUtil.java:140]   -   -Djava.net.preferIPv6Addresses: false
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,026   DEBUG   [main][NetUtil.java:224]   -   Loopback interface: [lo, Software Loopback Interface 1, 127.0.0.1] ([lo, Software Loopback Interface 1, 127.0.0.1], {})
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,026   DEBUG   [main][NetUtil.java:289]   -   Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,354   DEBUG   [main][DefaultChannelId.java:101]   -   -Dio.netty.machineId: 60:f2:62:ff:fe:f8:14:f2 (auto-detected)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,373   DEBUG   [main][ByteBufUtil.java:83]   -   -Dio.netty.allocator.type: pooled
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,374   DEBUG   [main][ByteBufUtil.java:92]   -   -Dio.netty.threadLocalDirectBufferSize: 0
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,374   DEBUG   [main][ByteBufUtil.java:95]   -   -Dio.netty.maxThreadLocalCharBufferSize: 16384
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,420   INFO   [main][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20891 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x4649e211, L:/192.168.137.1:2588 - R:/192.168.137.1:20891]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,420   INFO   [main][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20891, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,442   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.cache;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class CacheFactory$Adaptive implements org.apache.dubbo.cache.CacheFactory {
public org.apache.dubbo.cache.Cache getCache(org.apache.dubbo.common.URL arg0, org.apache.dubbo.rpc.Invocation arg1)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
if (arg1 == null) throw new IllegalArgumentException("invocation == null"); String methodName = arg1.getMethodName();
String extName = url.getMethodParameter(methodName, "cache", "lru");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.cache.CacheFactory) name from url (" + url.toString() + ") use keys([cache])");
org.apache.dubbo.cache.CacheFactory extension = (org.apache.dubbo.cache.CacheFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.cache.CacheFactory.class).getExtension(extName);
return extension.getCache(arg0, arg1);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,450   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.monitor;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class MonitorFactory$Adaptive implements org.apache.dubbo.monitor.MonitorFactory {
public org.apache.dubbo.monitor.Monitor getMonitor(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = ( url.getProtocol() == null ? "dubbo" : url.getProtocol() );
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.monitor.MonitorFactory) name from url (" + url.toString() + ") use keys([protocol])");
org.apache.dubbo.monitor.MonitorFactory extension = (org.apache.dubbo.monitor.MonitorFactory)ExtensionLoader.getExtensionLoader(org.apache.dubbo.monitor.MonitorFactory.class).getExtension(extName);
return extension.getMonitor(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,458   DEBUG   [main][AdaptiveClassCodeGenerator.java:104]   -    [DUBBO] package org.apache.dubbo.validation;
import org.apache.dubbo.common.extension.ExtensionLoader;
public class Validation$Adaptive implements org.apache.dubbo.validation.Validation {
public org.apache.dubbo.validation.Validator getValidator(org.apache.dubbo.common.URL arg0)  {
if (arg0 == null) throw new IllegalArgumentException("url == null");
org.apache.dubbo.common.URL url = arg0;
String extName = url.getParameter("validation", "jvalidation");
if(extName == null) throw new IllegalStateException("Failed to get extension (org.apache.dubbo.validation.Validation) name from url (" + url.toString() + ") use keys([validation])");
org.apache.dubbo.validation.Validation extension = (org.apache.dubbo.validation.Validation)ExtensionLoader.getExtensionLoader(org.apache.dubbo.validation.Validation.class).getExtension(extName);
return extension.getValidator(arg0);
}
}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,469   INFO   [main][AbstractRegistry.java:212]   -    [DUBBO] Load registry cache file C:\Users\86188\.dubbo\dubbo-registry-merchant-service-127.0.0.1:8848.cache, data: {merchant-application/com.alibaba.cloud.dubbo.service.DubboMetadataService:1.0.0=dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=32636&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610626795467&version=1.0.0}, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,469   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,475   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,480   INFO   [main][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11192&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,483   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-service&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, urls: [dubbo://192.168.137.1:20891/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-application&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=11192&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639223552&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,484   INFO   [main][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-application&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=21116&qos.enable=false&refer=application%3Dmerchant-service%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-application%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D21116%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610639245471%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639245471&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,510   DEBUG   [main][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,510   DEBUG   [main][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,510   DEBUG   [main][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,511   DEBUG   [main][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,519   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,519   DEBUG   [NettyClientWorker-1-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,521   DEBUG   [NettyClientWorker-1-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@9a0fd8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,560   DEBUG   [NettyServerWorker-3-1][Recycler.java:96]   -   -Dio.netty.recycler.maxCapacityPerThread: 4096
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,560   DEBUG   [NettyServerWorker-3-1][Recycler.java:97]   -   -Dio.netty.recycler.maxSharedCapacityFactor: 2
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,560   DEBUG   [NettyServerWorker-3-1][Recycler.java:98]   -   -Dio.netty.recycler.linkCapacity: 16
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,560   DEBUG   [NettyServerWorker-3-1][Recycler.java:99]   -   -Dio.netty.recycler.ratio: 8
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,567   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:61]   -   -Dio.netty.buffer.checkAccessible: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,568   DEBUG   [NettyServerWorker-3-1][AbstractByteBuf.java:62]   -   -Dio.netty.buffer.checkBounds: true
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,570   DEBUG   [NettyServerWorker-3-1][ResourceLeakDetectorFactory.java:202]   -   Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@fdd8ba
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,607   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,632   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,633   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-application] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,633   INFO   [main][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : nacos-dubbo-service1] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,635   WARN   [main][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : nacos-dubbo-service1] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,636   INFO   [main][DubboServiceMetadataRepository.java:262]   -   The metadata of Dubbo services has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,686   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:2) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,688   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-application , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,689   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : nacos-dubbo-service1 , size : 0] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,694   INFO   [main][ServiceBean.java:112]   -    [DUBBO] The service ready on spring started. service: com.huiminpay.merchant.service.MerchantServiceApi, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,702   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,720   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to local registry url : injvm://127.0.0.1/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,720   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.huiminpay.merchant.service.MerchantServiceApi to url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,721   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,721   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705 to registry registry://localhost:9090/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=21116&qos.enable=false&registry=spring-cloud&release=2.7.3&timestamp=1610639246702, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,736   INFO   [main][AbstractServer.java:73]   -    [DUBBO] Start NettyServer bind /0.0.0.0:20892, export /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:26,742   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,299   INFO   [main][InetUtils.java:170]   -   Cannot determine local hostname
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,299   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,300   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-application]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,301   DEBUG   [DubboServerHandler-192.168.137.1:20891-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,302   DEBUG   [DubboClientHandler-192.168.137.1:20891-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,303   DEBUG   [main][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705] will notify all URLs : []
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,303   DEBUG   [main][RegistryProtocol.java:524]   -    [DUBBO] original override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,303   DEBUG   [main][RegistryProtocol.java:528]   -    [DUBBO] subscribe url: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, override urls: [], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,303   INFO   [main][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : nacos-dubbo-service1]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,303   INFO   [main][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : nacos-dubbo-service1], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,304   DEBUG   [main][DubboServiceMetadataRepository.java:273]   -   The metadata of Dubbo service[name : nacos-dubbo-service1] has been initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,304   WARN   [main][AbstractSpringCloudRegistry.java:234]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] still can't be found, it could effect the further Dubbo service invocation
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,304   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,305   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.huiminpay.merchant.service.MerchantServiceApi url dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=21116&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610639246704, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,305   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,307   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,312   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,313   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&qos.enable=false&register=true&release=2.7.3&side=provider&timestamp=1610639246705, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,316   INFO   [main][DirectJDKLog.java:173]   -   Starting ProtocolHandler ["http-nio-57020"]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,327   INFO   [main][TomcatWebServer.java:204]   -   Tomcat started on port(s): 57020 (http) with context path ''
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,350   WARN   [main][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,358   INFO   [main][ServiceConfig.java:643]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to local registry url : injvm://127.0.0.1/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,359   INFO   [main][ServiceConfig.java:581]   -    [DUBBO] Export dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService to url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,359   INFO   [main][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,359   INFO   [main][ServiceConfig.java:595]   -    [DUBBO] Register dubbo service com.alibaba.cloud.dubbo.service.DubboMetadataService url dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0 to registry registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-service&dubbo=2.0.2&pid=21116&qos.enable=false&registry=nacos&release=2.7.3&timestamp=1610639248351, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,360   INFO   [main][AbstractRegistry.java:280]   -    [DUBBO] Register: dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,363   INFO   [main][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,366   WARN   [main][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,367   WARN   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:395]   -    [DUBBO] Ignore empty notify urls for subscribe url provider://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&bind.ip=192.168.137.1&bind.port=20892&category=configurators&check=false&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&pid=21116&qos.enable=false&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,367   INFO   [main][DubboMetadataServiceExporter.java:86]   -   The Dubbo service[<dubbo:service path="com.alibaba.cloud.dubbo.service.DubboMetadataService" ref="com.alibaba.cloud.dubbo.service.IntrospectiveDubboMetadataService@edc426" prefix="dubbo.service.com.alibaba.cloud.dubbo.service.DubboMetadataService" generic="false" exported="true" unexported="false" interface="com.alibaba.cloud.dubbo.service.DubboMetadataService" version="1.0.0" dynamic="true" group="merchant-service" deprecated="false" register="true" id="com.alibaba.cloud.dubbo.service.DubboMetadataService" valid="true" />] has been exported.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,379   INFO   [main][NacosServiceRegistry.java:62]   -   nacos registry, merchant-service 192.168.1.115:57020 register finished
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:28,383   INFO   [main][StartupInfoLogger.java:59]   -   Started MerchantBootstrap in 14.84 seconds (JVM running for 16.014)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:29,053   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867, urls: [dubbo://192.168.137.1:20892/com.huiminpay.merchant.service.MerchantServiceApi?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&path=com.huiminpay.merchant.service.MerchantServiceApi&pid=21116&protocol=dubbo&register=true&release=2.7.3&side=provider&timestamp=1610639246705], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:29,077   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.137.1:20892 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x0b70e459, L:/192.168.137.1:2653 - R:/192.168.137.1:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:29,077   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.137.1:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,347   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,351   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceDiscoveryAutoConfiguration.java:157]   -   The event of the service instances[name : merchant-service , size : 1] change is about to be dispatched
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,351   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:213]   -   The Dubbo Service URL[ID : consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi] is being subscribed for service[name : merchant-service]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,351   INFO   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:223]   -   The metadata of Dubbo service[key : com.huiminpay.merchant.service.MerchantServiceApi] can't be found when the subscribed service[name : merchant-service], and then try to initialize it
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,351   INFO   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:280]   -   The metadata of Dubbo service[name : merchant-service] is about to be initialized
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,378   WARN   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:265]   -    [DUBBO] There's no valid metadata config found, if you are using the simplified mode of registry url, please make sure you have a metadata address configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,382   INFO   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,383   INFO   [com.alibaba.nacos.naming.client.listener][AbstractInterfaceConfig.java:237]   -    [DUBBO] There's no valid monitor config found, if you want to open monitor statistics for Dubbo, please make sure your monitor is configured properly., dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,386   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,386   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:116]   -   The URL[consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0] should not be registered.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,386   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,387   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:280]   -    [DUBBO] Register: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=consumers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,390   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:305]   -    [DUBBO] Subscribe: consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,393   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21116&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,394   INFO   [com.alibaba.nacos.naming.client.listener][AbstractRegistry.java:399]   -    [DUBBO] Notify urls for subscribe url consumer://192.168.137.1/org.apache.dubbo.rpc.service.GenericService?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, urls: [dubbo://192.168.137.1:20892/com.alibaba.cloud.dubbo.service.DubboMetadataService?anyhost=true&application=merchant-service&category=providers&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&methods=getAllServiceKeys,getServiceRestMetadata,getExportedURLs,getAllExportedURLs&path=com.alibaba.cloud.dubbo.service.DubboMetadataService&pid=21116&protocol=dubbo&register=true&release=2.7.3&revision=2.1.0.RELEASE&side=provider&timestamp=1610639248351&version=1.0.0], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,394   INFO   [com.alibaba.nacos.naming.client.listener][ReferenceConfig.java:421]   -    [DUBBO] Refer dubbo service org.apache.dubbo.rpc.service.GenericService from url registry://127.0.0.1:8848/org.apache.dubbo.registry.RegistryService?application=merchant-application&check=false&cluster=registryaware&dubbo=2.0.2&generic=true&group=merchant-service&interface=com.alibaba.cloud.dubbo.service.DubboMetadataService&lazy=false&pid=11192&qos.enable=false&refer=application%3Dmerchant-application%26check%3Dfalse%26dubbo%3D2.0.2%26generic%3Dtrue%26group%3Dmerchant-service%26interface%3Dcom.alibaba.cloud.dubbo.service.DubboMetadataService%26lazy%3Dfalse%26pid%3D11192%26qos.enable%3Dfalse%26register.ip%3D192.168.137.1%26release%3D2.7.3%26retries%3D-1%26side%3Dconsumer%26sticky%3Dfalse%26timeout%3D3000%26timestamp%3D1610639253379%26version%3D1.0.0&register.ip=192.168.137.1&registry=nacos&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639253379&version=1.0.0, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,410   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-2][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,414   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,414   WARN   [com.alibaba.nacos.naming.client.listener][DubboServiceMetadataRepository.java:484]   -   The Spring application[name : merchant-service] does not expose The REST metadata in the Dubbo services.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,415   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-3][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,417   DEBUG   [DubboClientHandler-192.168.137.1:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,418   DEBUG   [com.alibaba.nacos.naming.client.listener][AbstractSpringCloudRegistry.java:289]   -   The subscribed URL[consumer://192.168.137.1/com.huiminpay.merchant.service.MerchantServiceApi?application=merchant-application&category=providers,configurators,routers&check=false&dubbo=2.0.2&interface=com.huiminpay.merchant.service.MerchantServiceApi&lazy=false&methods=findMerchantById&pid=11192&qos.enable=false&release=2.7.3&retries=-1&side=consumer&sticky=false&timeout=3000&timestamp=1610639221867] will notify all URLs : [dubbo://192.168.1.115:20892?anyhost=true&application=merchant-service&bean.name=ServiceBean:com.huiminpay.merchant.service.MerchantServiceApi&deprecated=false&dubbo=2.0.2&dynamic=true&generic=false&interface=com.huiminpay.merchant.service.MerchantServiceApi&methods=findMerchantById&pid=21116&register=true&release=2.7.3&side=provider&timestamp=1610639246705]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,420   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:199]   -    [DUBBO] Succeed connect to server /192.168.1.115:20892 from NettyClient 192.168.137.1 using dubbo version 2.7.3, channel is NettyChannel [channel=[id: 0x59efb2d9, L:/192.168.1.115:2676 - R:/192.168.1.115:20892]], dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:33,420   INFO   [com.alibaba.nacos.naming.client.listener][AbstractClient.java:71]   -    [DUBBO] Start NettyClient and-1/192.168.137.1 connect to the server /192.168.1.115:20892, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:37,912   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   A cookie header was received [1605750040,1605856357] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:37,918   INFO   [http-nio-57010-exec-1][DirectJDKLog.java:173]   -   Initializing Spring DispatcherServlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:37,919   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:524]   -   Initializing Servlet 'dispatcherServlet'
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:37,939   INFO   [http-nio-57010-exec-1][FrameworkServlet.java:546]   -   Completed initialization in 20 ms
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:38,369   WARN   [http-nio-57010-exec-2][AbstractSerializableParameter.java:421]   -   Illegal DefaultValue  for parameter type integer
java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)
	at java.lang.Long.parseLong(Long.java:601)
	at java.lang.Long.valueOf(Long.java:803)
	at io.swagger.models.parameters.AbstractSerializableParameter.getExample(AbstractSerializableParameter.java:412)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:688)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serializeContents(IndexedListSerializer.java:119)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:79)
	at com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer.serialize(IndexedListSerializer.java:18)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serializeFields(MapSerializer.java:722)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:643)
	at com.fasterxml.jackson.databind.ser.std.MapSerializer.serialize(MapSerializer.java:33)
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:727)
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:719)
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:155)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider._serialize(DefaultSerializerProvider.java:480)
	at com.fasterxml.jackson.databind.ser.DefaultSerializerProvider.serializeValue(DefaultSerializerProvider.java:319)
	at com.fasterxml.jackson.databind.ObjectMapper._configAndWriteValue(ObjectMapper.java:3905)
	at com.fasterxml.jackson.databind.ObjectMapper.writeValueAsString(ObjectMapper.java:3219)
	at springfox.documentation.spring.web.json.JsonSerializer.toJson(JsonSerializer.java:38)
	at springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(Swagger2Controller.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:189)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:895)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:800)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1038)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:942)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1005)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:897)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:882)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:200)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:679)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:834)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1415)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,632   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcInvocation, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,669   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:132]   -   {conn-10005} pool-connect
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,683   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   ==>  Preparing: SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=? 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,775   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} created. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,792   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   ==> Parameters: 1(Long)
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,794   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Parameters : [1]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,794   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} Types : [BIGINT]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,809   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} executed. 16.1358 millis. SELECT ID,MERCHANT_NAME,MERCHANT_NO,MERCHANT_ADDRESS,MERCHANT_TYPE,BUSINESS_LICENSES_IMG,ID_CARD_FRONT_IMG,ID_CARD_AFTER_IMG,USERNAME,MOBILE,CONTACTS_ADDRESS,AUDIT_STATUS,TENANT_ID FROM merchant WHERE ID=?
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,812   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} open
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,813   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Header: [ID, MERCHANT_NAME, MERCHANT_NO, MERCHANT_ADDRESS, MERCHANT_TYPE, BUSINESS_LICENSES_IMG, ID_CARD_FRONT_IMG, ID_CARD_AFTER_IMG, USERNAME, MOBILE, CONTACTS_ADDRESS, AUDIT_STATUS, TENANT_ID]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,821   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} Result: [1, alibaba, null, null, null, null, null, null, null, null, null, null, null]
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,824   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][BaseJdbcLogger.java:159]   -   <==      Total: 1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,824   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:142]   -   {conn-10005, pstmt-20000, rs-50000} closed
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,825   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:137]   -   {conn-10005, pstmt-20000} clearParameters. 
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,825   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][PreparedStatementPool.java:129]   -   {conn-10005, pstmt-20000} enter cache
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,826   DEBUG   [DubboServerHandler-192.168.137.1:20892-thread-5][Log4j2Filter.java:132]   -   {conn-10005} pool-recycle
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:51,833   DEBUG   [DubboClientHandler-192.168.1.115:20892-thread-1][DecodeHandler.java:59]   -    [DUBBO] Decode decodeable message org.apache.dubbo.rpc.protocol.dubbo.DecodeableRpcResult, dubbo version: 2.7.3, current host: 192.168.137.1
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:47:56,693   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
[${project.name}][${env:SERVER_PORT}]   2021-01-14 23:48:03,353   WARN   [ThreadPoolTaskScheduler-1][DubboServiceMetadataRepository.java:216]   -   Current application will subscribe all services(size:3) in registry, a lot of memory and CPU cycles may be used, thus it's strongly recommend you using the externalized property 'dubbo.cloud.subscribed-services' to specify the services
